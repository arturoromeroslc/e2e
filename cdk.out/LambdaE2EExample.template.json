{
  "Resources": {
    "LambdaFunctionServiceRoleC555A460": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaE2EExample/LambdaFunction/ServiceRole/Resource"
      }
    },
    "LambdaFunctionServiceRoleDefaultPolicy32EEEE35": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaFunctionServiceRoleDefaultPolicy32EEEE35",
        "Roles": [
          {
            "Ref": "LambdaFunctionServiceRoleC555A460"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaE2EExample/LambdaFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "LambdaFunctionBF21E41F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaFunctionCodeS3BucketA470E70F"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "LambdaFunctionCodeS3VersionKey0A87C2A6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "LambdaFunctionCodeS3VersionKey0A87C2A6"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaFunctionServiceRoleC555A460",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "MemorySize": 512,
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "LambdaFunctionServiceRoleDefaultPolicy32EEEE35",
        "LambdaFunctionServiceRoleC555A460"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaE2EExample/LambdaFunction/Resource",
        "aws:asset:path": "asset.61309afce0b27b0fc1941a227a049fa8edd30a39abb54660b2242c2ac1f406b5.zip",
        "aws:asset:property": "Code"
      }
    },
    "LambdaFunctionAllowEventRuleLambdaE2EExampleRunevery2minutes2410FC7B74A4E8DA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunctionBF21E41F",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Runevery2minutes84E08230",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaE2EExample/LambdaFunction/AllowEventRuleLambdaE2EExampleRunevery2minutes2410FC7B"
      }
    },
    "Runevery2minutes84E08230": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(2 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaFunctionBF21E41F",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaE2EExample/Run every 2 minutes/Resource"
      }
    },
    "Alarm7103F465": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 2,
        "AlarmDescription": "e2e critical path failed",
        "MetricName": "failed-workflow",
        "Namespace": "e2e",
        "Period": 120,
        "Statistic": "Sum",
        "Threshold": 100,
        "TreatMissingData": "breaching"
      },
      "Metadata": {
        "aws:cdk:path": "LambdaE2EExample/Alarm/Resource"
      }
    }
  },
  "Parameters": {
    "LambdaFunctionCodeS3BucketA470E70F": {
      "Type": "String",
      "Description": "S3 bucket for asset \"LambdaE2EExample/LambdaFunction/Code\""
    },
    "LambdaFunctionCodeS3VersionKey0A87C2A6": {
      "Type": "String",
      "Description": "S3 key for asset version \"LambdaE2EExample/LambdaFunction/Code\""
    },
    "LambdaFunctionCodeArtifactHash82D6A67B": {
      "Type": "String",
      "Description": "Artifact hash for asset \"LambdaE2EExample/LambdaFunction/Code\""
    }
  }
}