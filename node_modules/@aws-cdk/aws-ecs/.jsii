{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-autoscaling": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling",
          "packageId": "Amazon.CDK.AWS.AutoScaling",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling",
          "module": "aws_cdk.aws_autoscaling"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-autoscaling-hooktargets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "packageId": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-hooktargets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-hooktargets"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling-hooktargets",
          "module": "aws_cdk.aws_autoscaling_hooktargets"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-route53-targets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53.Targets",
          "packageId": "Amazon.CDK.AWS.Route53.Targets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "route53-targets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.route53.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53-targets"
        },
        "python": {
          "distName": "aws-cdk.aws-route53-targets",
          "module": "aws_cdk.aws_route53_targets"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-servicediscovery": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ServiceDiscovery",
          "packageId": "Amazon.CDK.AWS.ServiceDiscovery",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "servicediscovery",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.servicediscovery"
        },
        "js": {
          "npm": "@aws-cdk/aws-servicediscovery"
        },
        "python": {
          "distName": "aws-cdk.aws-servicediscovery",
          "module": "aws_cdk.aws_servicediscovery"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      },
      "version": "1.7.0"
    }
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-apigateway": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.APIGateway",
          "packageId": "Amazon.CDK.AWS.APIGateway",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "apigateway",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.apigateway"
        },
        "js": {
          "npm": "@aws-cdk/aws-apigateway"
        },
        "python": {
          "distName": "aws-cdk.aws-apigateway",
          "module": "aws_cdk.aws_apigateway"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-autoscaling": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling",
          "packageId": "Amazon.CDK.AWS.AutoScaling",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling",
          "module": "aws_cdk.aws_autoscaling"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-autoscaling-hooktargets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "packageId": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-hooktargets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-hooktargets"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling-hooktargets",
          "module": "aws_cdk.aws_autoscaling_hooktargets"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-cloudfront": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudFront",
          "packageId": "Amazon.CDK.AWS.CloudFront",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cloudfront",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.cloudfront"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudfront"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudfront",
          "module": "aws_cdk.aws_cloudfront"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-route53-targets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53.Targets",
          "packageId": "Amazon.CDK.AWS.Route53.Targets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "route53-targets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.route53.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53-targets"
        },
        "python": {
          "distName": "aws-cdk.aws-route53-targets",
          "module": "aws_cdk.aws_route53_targets"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-servicediscovery": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ServiceDiscovery",
          "packageId": "Amazon.CDK.AWS.ServiceDiscovery",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "servicediscovery",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.servicediscovery"
        },
        "js": {
          "npm": "@aws-cdk/aws-servicediscovery"
        },
        "python": {
          "distName": "aws-cdk.aws-servicediscovery",
          "module": "aws_cdk.aws_servicediscovery"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-sns-subscriptions": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SNS.Subscriptions",
          "packageId": "Amazon.CDK.AWS.SNS.Subscriptions",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "sns-subscriptions",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.sns.subscriptions"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns-subscriptions"
        },
        "python": {
          "distName": "aws-cdk.aws-sns-subscriptions",
          "module": "aws_cdk.aws_sns_subscriptions"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      },
      "version": "1.7.0"
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      },
      "version": "1.7.0"
    }
  },
  "description": "The CDK Construct Library for AWS::ECS",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "0.16.0 (build 98909b5)",
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-ecs",
  "readme": {
    "markdown": "## Amazon ECS Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Stability: Stable](https://img.shields.io/badge/stability-Stable-success.svg?style=for-the-badge)\n\n\n---\n<!--END STABILITY BANNER-->\n\nThis package contains constructs for working with **Amazon Elastic Container\nService** (Amazon ECS).\n\nAmazon ECS is a highly scalable, fast, container management service\nthat makes it easy to run, stop,\nand manage Docker containers on a cluster of Amazon EC2 instances.\n\nFor further information on Amazon ECS,\nsee the [Amazon ECS documentation](https://docs.aws.amazon.com/ecs)\n\nThe following example creates an Amazon ECS cluster,\nadds capacity to it,\nand instantiates the Amazon ECS Service with an automatic load balancer.\n\n```ts\nimport ecs = require('@aws-cdk/aws-ecs');\n\n// Create an ECS cluster\nconst cluster = new ecs.Cluster(this, 'Cluster', {\n  vpc,\n});\n\n// Add capacity to it\ncluster.addCapacity('DefaultAutoScalingGroupCapacity', {\n  instanceType: new ec2.InstanceType(\"t2.xlarge\"),\n  desiredCapacity: 3,\n});\n\n// Instantiate an Amazon ECS Service\nconst ecsService = new ecs.Ec2Service(this, 'Service', {\n  cluster,\n  memoryLimitMiB: 512,\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n});\n```\n\nFor a set of constructs defining common ECS architectural patterns, see the `@aws-cdk/aws-ecs-patterns` package.\n\n## AWS Fargate vs Amazon ECS\n\nThere are two sets of constructs in this library; one to run tasks on Amazon ECS and\none to run tasks on AWS Fargate.\n\n- Use the `Ec2TaskDefinition` and `Ec2Service` constructs to run tasks on Amazon EC2 instances running in your account.\n- Use the `FargateTaskDefinition` and `FargateService` constructs to run tasks on\n  instances that are managed for you by AWS.\n\nHere are the main differences:\n\n- **Amazon EC2**: instances are under your control. Complete control of task to host\n  allocation. Required to specify at least a memory reseration or limit for\n  every container. Can use Host, Bridge and AwsVpc networking modes. Can attach\n  Classic Load Balancer. Can share volumes between container and host.\n- **AWS Fargate**: tasks run on AWS-managed instances, AWS manages task to host\n  allocation for you. Requires specification of memory and cpu sizes at the\n  taskdefinition level. Only supports AwsVpc networking modes and\n  Application/Network Load Balancers. Only the AWS log driver is supported.\n  Many host features are not supported such as adding kernel capabilities\n  and mounting host devices/volumes inside the container.\n\nFor more information on Amazon EC2 vs AWS Fargate and networking see the AWS Documentation:\n[AWS Fargate](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.html) and\n[Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html).\n\n## Clusters\n\nA `Cluster` defines the infrastructure to run your\ntasks on. You can run many tasks on a single cluster.\n\nThe following code creates a cluster that can run AWS Fargate tasks:\n\n```ts\nconst cluster = new ecs.Cluster(this, 'Cluster', {\n  vpc: vpc\n});\n```\n\nTo use tasks with Amazon EC2 launch-type, you have to add capacity to\nthe cluster in order for tasks to be scheduled on your instances.  Typically,\nyou add an AutoScalingGroup with instances running the latest\nAmazon ECS-optimized AMI to the cluster. There is a method to build and add such an\nAutoScalingGroup automatically, or you can supply a customized AutoScalingGroup\nthat you construct yourself. It's possible to add multiple AutoScalingGroups\nwith various instance types.\n\nThe following example creates an Amazon ECS cluster and adds capacity to it:\n\n```ts\nconst cluster = new ecs.Cluster(this, 'Cluster', {\n  vpc: vpc\n});\n\n// Either add default capacity\ncluster.addCapacity('DefaultAutoScalingGroupCapacity', {\n  instanceType: new ec2.InstanceType(\"t2.xlarge\"),\n  desiredCapacity: 3,\n});\n\n// Or add customized capacity. Be sure to start the Amazon ECS-optimized AMI.\nconst autoScalingGroup = new autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: new ec2.InstanceType('t2.xlarge'),\n  machineImage: EcsOptimizedImage.amazonLinux(),\n  // Or use Amazon ECS-Optimized Amazon Linux 2 AMI\n  // machineImage: EcsOptimizedImage.amazonLinux2(),\n  desiredCapacity: 3,\n  // ... other options here ...\n});\n\ncluster.addAutoScalingGroup(autoScalingGroup);\n```\n\nIf you omit the property `vpc`, the construct will create a new VPC with two AZs.\n\n## Task definitions\n\nA task Definition describes what a single copy of a **task** should look like.\nA task definition has one or more containers; typically, it has one\nmain container (the *default container* is the first one that's added\nto the task definition, and it is marked *essential*) and optionally\nsome supporting containers which are used to support the main container,\ndoings things like upload logs or metrics to monitoring services.\n\nTo run a task or service with Amazon EC2 launch type, use the `Ec2TaskDefinition`. For AWS Fargate tasks/services, use the\n`FargateTaskDefinition`. These classes provide a simplified API that only contain\nproperties relevant for that specific launch type.\n\nFor a `FargateTaskDefinition`, specify the task size (`memoryLimitMiB` and `cpu`):\n\n```ts\nconst fargateTaskDefinition = new ecs.FargateTaskDefinition(this, 'TaskDef', {\n  memoryLimitMiB: 512,\n  cpu: 256\n});\n```\nTo add containers to a task definition, call `addContainer()`:\n\n```ts\nconst container = fargateTaskDefinition.addContainer(\"WebContainer\", {\n  // Use an image from DockerHub\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  // ... other options here ...\n});\n```\n\nFor a `Ec2TaskDefinition`:\n\n```ts\nconst ec2TaskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef', {\n  networkMode: NetworkMode.BRIDGE\n});\n\nconst container = ec2TaskDefinition.addContainer(\"WebContainer\", {\n  // Use an image from DockerHub\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  memoryLimitMiB: 1024\n  // ... other options here ...\n});\n```\n\nYou can specify container properties when you add them to the task definition, or with various methods, e.g.:\n\n```ts\ncontainer.addPortMappings({\n  containerPort: 3000\n})\n```\n\nTo use a TaskDefinition that can be used with either Amazon EC2 or\nAWS Fargate launch types, use the `TaskDefinition` construct.\n\nWhen creating a task definition you have to specify what kind of\ntasks you intend to run: Amazon EC2, AWS Fargate, or both.\nThe following example uses both:\n\n```ts\nconst taskDefinition = new ecs.TaskDefinition(this, 'TaskDef', {\n  memoryMiB: '512',\n  cpu: '256',\n  networkMode: NetworkMode.AWS_VPC,\n  compatibility: ecs.Compatibility.EC2_AND_FARGATE,\n});\n```\n\n### Images\n\nImages supply the software that runs inside the container. Images can be\nobtained from either DockerHub or from ECR repositories, or built directly from a local Dockerfile.\n\n* `ecs.ContainerImage.fromRegistry(imageName)`: use a public image.\n* `ecs.ContainerImage.fromRegistry(imageName, { credentials: mySecret })`: use a private image that requires credentials.\n* `ecs.ContainerImage.fromEcrRepository(repo, tag)`: use the given ECR repository as the image\n  to start. If no tag is provided, \"latest\" is assumed.\n* `ecs.ContainerImage.fromAsset('./image')`: build and upload an\n  image directly from a `Dockerfile` in your source directory.\n\n### Environment variables\n\nTo pass environment variables to the container, use the `environment` and `secrets` props.\n\n```ts\ntaskDefinition.addContainer('container', {\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  memoryLimitMiB: 1024,\n  environment: { // clear text, not for sensitive data\n    STAGE: 'prod',\n  },\n  secrets: { // Retrieved from AWS Secrets Manager or AWS Systems Manager Parameter Store at container start-up.\n    SECRET: ecs.Secret.fromSecretsManager(secret),\n    PARAMETER: ecs.Secret.fromSsmParameter(parameter),\n  }\n});\n```\n\nThe task execution role is automatically granted read permissions on the secrets/parameters.\n\n## Service\n\nA `Service` instantiates a `TaskDefinition` on a `Cluster` a given number of\ntimes, optionally associating them with a load balancer.\nIf a task fails,\nAmazon ECS automatically restarts the task.\n\n```ts\nconst taskDefinition;\n\nconst service = new ecs.FargateService(this, 'Service', {\n  cluster,\n  taskDefinition,\n  desiredCount: 5\n});\n```\n\n### Include a load balancer\n\n`Services` are load balancing targets and can be directly attached to load\nbalancers:\n\n```ts\nimport elbv2 = require('@aws-cdk/aws-elasticloadbalancingv2');\n\nconst service = new ecs.FargateService(this, 'Service', { /* ... */ });\n\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', { vpc, internetFacing: true });\nconst listener = lb.addListener('Listener', { port: 80 });\nconst target = listener.addTargets('ECS', {\n  port: 80,\n  targets: [service]\n});\n```\n\nThere are two higher-level constructs available which include a load balancer for you that can be found in the aws-ecs-patterns module:\n\n* `LoadBalancedFargateService`\n* `LoadBalancedEc2Service`\n\n## Task Auto-Scaling\n\nYou can configure the task count of a service to match demand. Task auto-scaling is\nconfigured by calling `autoScaleTaskCount()`:\n\n```ts\nconst scaling = service.autoScaleTaskCount({ maxCapacity: 10 });\nscaling.scaleOnCpuUtilization('CpuScaling', {\n  targetUtilizationPercent: 50\n});\n\nscaling.scaleOnRequestCount('RequestScaling', {\n  requestsPerTarget: 10000,\n  targetGroup: target\n})\n```\n\nTask auto-scaling is powered by *Application Auto-Scaling*.\nSee that section for details.\n\n## Instance Auto-Scaling\n\nIf you're running on AWS Fargate, AWS manages the physical machines that your\ncontainers are running on for you. If you're running an Amazon ECS cluster however,\nyour Amazon EC2 instances might fill up as your number of Tasks goes up.\n\nTo avoid placement errors, configure auto-scaling for your\nAmazon EC2 instance group so that your instance count scales with demand. To keep\nyour Amazon EC2 instances halfway loaded, scaling up to a maximum of 30 instances\nif required:\n\n```ts\nconst autoScalingGroup = cluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: new ec2.InstanceType(\"t2.xlarge\"),\n  minCapacity: 3,\n  maxCapacity: 30,\n  desiredCapacity: 3,\n\n  // Give instances 5 minutes to drain running tasks when an instance is\n  // terminated. This is the default, turn this off by specifying 0 or\n  // change the timeout up to 900 seconds.\n  taskDrainTime: Duration.seconds(300)\n});\n\nautoScalingGroup.scaleOnCpuUtilization('KeepCpuHalfwayLoaded', {\n  targetUtilizationPercent: 50\n});\n```\n\nSee the `@aws-cdk/aws-autoscaling` library for more autoscaling options\nyou can configure on your instances.\n\n## Integration with CloudWatch Events\n\nTo start an Amazon ECS task on an Amazon EC2-backed Cluster, instantiate an\n`@aws-cdk/aws-events-targets.EcsTask` instead of an `Ec2Service`:\n\n```ts\nimport targets = require('@aws-cdk/aws-events-targets');\n\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromAsset(path.resolve(__dirname, '..', 'eventhandler-image')),\n  memoryLimitMiB: 256,\n  logging: new ecs.AwsLogDriver({ streamPrefix: 'EventDemo' })\n});\n\n// An Rule that describes the event trigger (in this case a scheduled run)\nconst rule = new events.Rule(this, 'Rule', {\n  schedule: events.Schedule.expression('rate(1 min)')\n});\n\n// Pass an environment variable to the container 'TheContainer' in the task\nrule.addTarget(new targets.EcsTask({\n  cluster,\n  taskDefinition,\n  taskCount: 1,\n  containerOverrides: [{\n    containerName: 'TheContainer',\n    environment: [{\n      name: 'I_WAS_TRIGGERED',\n      value: 'From CloudWatch Events'\n    }]\n  }]\n}));\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-ecs",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.ECS",
      "packageId": "Amazon.CDK.AWS.ECS",
      "signAssembly": true,
      "versionSuffix": "-devpreview"
    },
    "java": {
      "maven": {
        "artifactId": "ecs",
        "groupId": "software.amazon.awscdk",
        "versionSuffix": ".DEVPREVIEW"
      },
      "package": "software.amazon.awscdk.services.ecs"
    },
    "js": {
      "npm": "@aws-cdk/aws-ecs"
    },
    "python": {
      "distName": "aws-cdk.aws-ecs",
      "module": "aws_cdk.aws_ecs"
    }
  },
  "types": {
    "@aws-cdk/aws-ecs.AddAutoScalingGroupCapacityOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for adding an AutoScalingGroup."
      },
      "fqn": "@aws-cdk/aws-ecs.AddAutoScalingGroupCapacityOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 597
      },
      "name": "AddAutoScalingGroupCapacityOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether the containers can access the container instance role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 603
          },
          "name": "canContainersAccessInstanceRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "remarks": "This creates a Lambda function that is used by a lifecycle hook for the\nAutoScalingGroup that will delay instance termination until all ECS tasks\nhave drained from the instance. Set to 0 to disable task draining.\n\nSet to 0 to disable task draining.",
            "stability": "stable",
            "summary": "The time period to wait before force terminating an instance that is draining."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 616
          },
          "name": "taskDrainTime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AddCapacityOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for adding instance capacity to an AutoScalingGroup."
      },
      "fqn": "@aws-cdk/aws-ecs.AddCapacityOptions",
      "interfaces": [
        "@aws-cdk/aws-ecs.AddAutoScalingGroupCapacityOptions",
        "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 622
      },
      "name": "AddCapacityOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The EC2 instance type to use when launching instances into the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 626
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Amazon Linux 2",
            "remarks": "For more information, see\n[Amazon ECS-optimized AMIs](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html).",
            "stability": "stable",
            "summary": "The ECS-optimized AMI variant to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 634
          },
          "name": "machineImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AmiHardwareType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "For more information, see\n[Amazon ECS-optimized AMIs](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html).",
        "stability": "stable",
        "summary": "The ECS-optimized AMI variant to use."
      },
      "fqn": "@aws-cdk/aws-ecs.AmiHardwareType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 665
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the standard Amazon ECS-optimized AMI."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the Amazon ECS GPU-optimized AMI."
          },
          "name": "GPU"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI."
          },
          "name": "ARM"
        }
      ],
      "name": "AmiHardwareType"
    },
    "@aws-cdk/aws-ecs.AssetImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.ContainerImage",
      "docs": {
        "stability": "stable",
        "summary": "An image that will be built from a local directory with a Dockerfile."
      },
      "fqn": "@aws-cdk/aws-ecs.AssetImage",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the AssetImage class."
        },
        "parameters": [
          {
            "docs": {
              "summary": "The directory containing the Dockerfile."
            },
            "name": "directory",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.AssetImageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/images/asset-image.ts",
        "line": 21
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a ContainerDefinition."
          },
          "locationInModule": {
            "filename": "lib/images/asset-image.ts",
            "line": 31
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.ContainerImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig"
            }
          }
        }
      ],
      "name": "AssetImage"
    },
    "@aws-cdk/aws-ecs.AssetImageProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for building an AssetImage."
      },
      "fqn": "@aws-cdk/aws-ecs.AssetImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/images/asset-image.ts",
        "line": 9
      },
      "name": "AssetImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "The arguments to pass to the `docker build` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/images/asset-image.ts",
            "line": 15
          },
          "name": "buildArgs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AwsLogDriver": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.LogDriver",
      "docs": {
        "stability": "stable",
        "summary": "A log driver that sends log information to CloudWatch Logs."
      },
      "fqn": "@aws-cdk/aws-ecs.AwsLogDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the AwsLogDriver class."
        },
        "parameters": [
          {
            "docs": {
              "summary": "the awslogs log driver configuration options."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.AwsLogDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/aws-log-driver.ts",
        "line": 65
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 89
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.LogDriver",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "AwsLogDriver",
      "properties": [
        {
          "docs": {
            "remarks": "Only available after the LogDriver has been bound to a ContainerDefinition.",
            "stability": "stable",
            "summary": "The log group to send log streams to."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 71
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AwsLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies the awslogs log driver configuration options."
      },
      "fqn": "@aws-cdk/aws-ecs.AwsLogDriverProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/aws-log-driver.ts",
        "line": 9
      },
      "name": "AwsLogDriverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The awslogs-stream-prefix option allows you to associate a log stream\nwith the specified prefix, the container name, and the ID of the Amazon\nECS task to which the container belongs. If you specify a prefix with\nthis option, then the log stream takes the following format:\n\n     prefix-name/container-name/ecs-task-id",
            "stability": "stable",
            "summary": "Prefix for the log streams."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 20
          },
          "name": "streamPrefix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No multiline matching.",
            "remarks": "A log message consists of a line that matches the pattern and any\nfollowing lines that don’t match the pattern. Thus the matched line is\nthe delimiter between log messages.",
            "stability": "stable",
            "summary": "This option defines a multiline start pattern in Python strftime format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 46
          },
          "name": "datetimeFormat",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A log group is automatically created.",
            "stability": "stable",
            "summary": "The log group to log to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 27
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Logs never expire.",
            "stability": "stable",
            "summary": "The number of days log events are kept in CloudWatch Logs when the log group is automatically created by this construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 35
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No multiline matching.",
            "remarks": "A log message consists of a line that matches the pattern and any\nfollowing lines that don’t match the pattern. Thus the matched line is\nthe delimiter between log messages.\n\nThis option is ignored if datetimeFormat is also configured.",
            "stability": "stable",
            "summary": "This option defines a multiline start pattern using a regular expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 59
          },
          "name": "multilinePattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BaseService": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "The base class for Ec2Service and FargateService services."
      },
      "fqn": "@aws-cdk/aws-ecs.BaseService",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the BaseService class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.BaseServiceProps"
            }
          },
          {
            "name": "additionalProps",
            "type": {
              "primitive": "any"
            }
          },
          {
            "name": "taskDefinition",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IService",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 115
      },
      "methods": [
        {
          "docs": {
            "remarks": "Don't call this function directly. Instead, call listener.addTarget()\nto add this service to a load balancer.",
            "stability": "stable",
            "summary": "This method is called to attach this service to an Application Load Balancer."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 223
          },
          "name": "attachToApplicationTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "remarks": "Don't call this function directly. Instead, call listener.addTarget()\nto add this service to a load balancer.",
            "stability": "stable",
            "summary": "This method is called to attach this service to a Network Load Balancer."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 241
          },
          "name": "attachToNetworkTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An attribute representing the minimum and maximum task count for an AutoScalingGroup."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 248
          },
          "name": "autoScaleTaskCount",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.EnableScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ScalableTaskCount"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method is called to create a networkConfiguration."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 296
          },
          "name": "configureAwsVpcNetworking",
          "parameters": [
            {
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            },
            {
              "name": "assignPublicIp",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "name": "vpcSubnets",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            },
            {
              "name": "securityGroup",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method returns the specified CloudWatch metric name for this service."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 265
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters CPU utilization."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 288
          },
          "name": "metricCpuUtilization",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters memory utilization."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 279
          },
          "name": "metricMemoryUtilization",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "BaseService",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The cluster that hosts the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 143
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The security groups which manage the allowed network traffic for the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 121
          },
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 126
          },
          "name": "serviceArn",
          "overrides": "@aws-cdk/aws-ecs.IService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 133
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task definition to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 138
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A list of Elastic Load Balancing load balancer objects, containing the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 154
          },
          "name": "loadBalancers",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The details of the service discovery registries to assign to this service. For more information, see Service Discovery."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 166
          },
          "name": "serviceRegistries",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The details of the AWS Cloud Map service."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 148
          },
          "name": "cloudmapService",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.Service"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A list of Elastic Load Balancing load balancer objects, containing the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 160
          },
          "name": "networkConfiguration",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BaseServiceOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for the base Ec2Service or FargateService service."
      },
      "fqn": "@aws-cdk/aws-ecs.BaseServiceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 28
      },
      "name": "BaseServiceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the cluster that hosts the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 32
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AWS Cloud Map service discovery is not enabled.",
            "stability": "stable",
            "summary": "The options for configuring an Amazon ECS service to use service discovery."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 79
          },
          "name": "cloudMapOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.CloudMapOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "The desired number of instantiations of the task definition to keep running on the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 39
          },
          "name": "desiredCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "For more information, see\n[Tagging Your Amazon ECS Resources](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html)",
            "stability": "stable",
            "summary": "Specifies whether to enable Amazon ECS managed tags for the tasks within the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 96
          },
          "name": "enableECSManagedTags",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to 60 seconds if at least one load balancer is in-use and it is not already set",
            "stability": "stable",
            "summary": "The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 72
          },
          "name": "healthCheckGracePeriod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 100 if daemon, otherwise 200",
            "stability": "stable",
            "summary": "The maximum number of tasks, specified as a percentage of the Amazon ECS service's DesiredCount value, that can run in a service during a deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 55
          },
          "name": "maxHealthyPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 0 if daemon, otherwise 50",
            "stability": "stable",
            "summary": "The minimum number of tasks, specified as a percentage of the Amazon ECS service's DesiredCount value, that must continue to run and remain healthy during a deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 64
          },
          "name": "minHealthyPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PropagatedTagSource.NONE",
            "remarks": "Valid values are: PropagatedTagSource.SERVICE, PropagatedTagSource.TASK_DEFINITION or PropagatedTagSource.NONE",
            "stability": "stable",
            "summary": "Specifies whether to propagate the tags from the task definition or the service to the tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 88
          },
          "name": "propagateTags",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.PropagatedTagSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CloudFormation-generated name.",
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 46
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BaseServiceProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Complete base service properties that are required to be supplied by the implementation of the BaseService class."
      },
      "fqn": "@aws-cdk/aws-ecs.BaseServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseServiceOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 103
      },
      "name": "BaseServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Valid values are: LaunchType.ECS or LaunchType.FARGATE",
            "stability": "stable",
            "summary": "The launch type on which to run your service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 109
          },
          "name": "launchType",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LaunchType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BinPackResource": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Instance resource used for bin packing."
      },
      "fqn": "@aws-cdk/aws-ecs.BinPackResource",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/placement.ts",
        "line": 7
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Fill up hosts' CPU allocations first."
          },
          "name": "CPU"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Fill up hosts' memory allocations first."
          },
          "name": "MEMORY"
        }
      ],
      "name": "BinPackResource"
    },
    "@aws-cdk/aws-ecs.BuiltInAttributes": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The built-in container instance attributes."
      },
      "fqn": "@aws-cdk/aws-ecs.BuiltInAttributes",
      "initializer": {},
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2/ec2-service.ts",
        "line": 237
      },
      "name": "BuiltInAttributes",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The AMI id the instance is using."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 251
          },
          "name": "AMI_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The AvailabilityZone where the instance is running in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 246
          },
          "name": "AVAILABILITY_ZONE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The id of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 241
          },
          "name": "INSTANCE_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The EC2 instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 256
          },
          "name": "INSTANCE_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Either 'linux' or 'windows'.",
            "stability": "stable",
            "summary": "The operating system of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 263
          },
          "name": "OS_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Capability": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "A Linux capability."
      },
      "fqn": "@aws-cdk/aws-ecs.Capability",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 183
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUDIT_CONTROL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUDIT_WRITE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BLOCK_SUSPEND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHOWN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DAC_OVERRIDE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DAC_READ_SEARCH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FOWNER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSETID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPC_LOCK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPC_OWNER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KILL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LEASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LINUX_IMMUTABLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAC_ADMIN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAC_OVERRIDE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MKNOD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NET_ADMIN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NET_BIND_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NET_BROADCAST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NET_RAW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SETFCAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SETGID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SETPCAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SETUID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_ADMIN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_BOOT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_CHROOT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_MODULE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_NICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_PACCT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_PTRACE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_RAWIO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_TIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_TTY_CONFIG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYSLOG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAKE_ALARM"
        }
      ],
      "name": "Capability"
    },
    "@aws-cdk/aws-ecs.CfnCluster": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECS::Cluster"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECS::Cluster`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnCluster",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECS::Cluster`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnClusterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 70
      },
      "methods": [
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 114
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 74
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 79
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 108
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-tags",
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 91
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustername",
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.ClusterName`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 85
          },
          "name": "clusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnClusterProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECS::Cluster`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 16
      },
      "name": "CfnClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustername",
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.ClusterName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 22
          },
          "name": "clusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-tags",
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 28
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECS::Service"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECS::Service`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECS::Service`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 308
      },
      "methods": [
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 481
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 312
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 317
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 459
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-tags",
            "stability": "external",
            "summary": "`AWS::ECS::Service.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 425
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-taskdefinition",
            "stability": "external",
            "summary": "`AWS::ECS::Service.TaskDefinition`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 323
          },
          "name": "taskDefinition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-cluster",
            "stability": "external",
            "summary": "`AWS::ECS::Service.Cluster`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 329
          },
          "name": "cluster",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentconfiguration",
            "stability": "external",
            "summary": "`AWS::ECS::Service.DeploymentConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 335
          },
          "name": "deploymentConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-desiredcount",
            "stability": "external",
            "summary": "`AWS::ECS::Service.DesiredCount`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 341
          },
          "name": "desiredCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableecsmanagedtags",
            "stability": "external",
            "summary": "`AWS::ECS::Service.EnableECSManagedTags`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 347
          },
          "name": "enableEcsManagedTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-healthcheckgraceperiodseconds",
            "stability": "external",
            "summary": "`AWS::ECS::Service.HealthCheckGracePeriodSeconds`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 353
          },
          "name": "healthCheckGracePeriodSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-launchtype",
            "stability": "external",
            "summary": "`AWS::ECS::Service.LaunchType`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 359
          },
          "name": "launchType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-loadbalancers",
            "stability": "external",
            "summary": "`AWS::ECS::Service.LoadBalancers`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 365
          },
          "name": "loadBalancers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-networkconfiguration",
            "stability": "external",
            "summary": "`AWS::ECS::Service.NetworkConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 371
          },
          "name": "networkConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementconstraints",
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlacementConstraints`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 377
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementstrategies",
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlacementStrategies`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 383
          },
          "name": "placementStrategies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-platformversion",
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlatformVersion`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 389
          },
          "name": "platformVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-propagatetags",
            "stability": "external",
            "summary": "`AWS::ECS::Service.PropagateTags`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 395
          },
          "name": "propagateTags",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-role",
            "stability": "external",
            "summary": "`AWS::ECS::Service.Role`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 401
          },
          "name": "role",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-schedulingstrategy",
            "stability": "external",
            "summary": "`AWS::ECS::Service.SchedulingStrategy`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 407
          },
          "name": "schedulingStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-servicename",
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceName`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 413
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-serviceregistries",
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceRegistries`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 419
          },
          "name": "serviceRegistries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.AwsVpcConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.AwsVpcConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 491
      },
      "name": "AwsVpcConfigurationProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-subnets",
            "stability": "external",
            "summary": "`CfnService.AwsVpcConfigurationProperty.Subnets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 506
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-assignpublicip",
            "stability": "external",
            "summary": "`CfnService.AwsVpcConfigurationProperty.AssignPublicIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 496
          },
          "name": "assignPublicIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-securitygroups",
            "stability": "external",
            "summary": "`CfnService.AwsVpcConfigurationProperty.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 501
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.DeploymentConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 550
      },
      "name": "DeploymentConfigurationProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html#cfn-ecs-service-deploymentconfiguration-maximumpercent",
            "stability": "external",
            "summary": "`CfnService.DeploymentConfigurationProperty.MaximumPercent`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 555
          },
          "name": "maximumPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html#cfn-ecs-service-deploymentconfiguration-minimumhealthypercent",
            "stability": "external",
            "summary": "`CfnService.DeploymentConfigurationProperty.MinimumHealthyPercent`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 560
          },
          "name": "minimumHealthyPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 601
      },
      "name": "LoadBalancerProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html#cfn-ecs-service-loadbalancers-containerport",
            "stability": "external",
            "summary": "`CfnService.LoadBalancerProperty.ContainerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 611
          },
          "name": "containerPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html#cfn-ecs-service-loadbalancers-containername",
            "stability": "external",
            "summary": "`CfnService.LoadBalancerProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 606
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html#cfn-ecs-service-loadbalancers-loadbalancername",
            "stability": "external",
            "summary": "`CfnService.LoadBalancerProperty.LoadBalancerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 616
          },
          "name": "loadBalancerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html#cfn-ecs-service-loadbalancers-targetgrouparn",
            "stability": "external",
            "summary": "`CfnService.LoadBalancerProperty.TargetGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 621
          },
          "name": "targetGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-networkconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 667
      },
      "name": "NetworkConfigurationProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-networkconfiguration.html#cfn-ecs-service-networkconfiguration-awsvpcconfiguration",
            "stability": "external",
            "summary": "`CfnService.NetworkConfigurationProperty.AwsvpcConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 672
          },
          "name": "awsvpcConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.AwsVpcConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementconstraint.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 711
      },
      "name": "PlacementConstraintProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementconstraint.html#cfn-ecs-service-placementconstraint-type",
            "stability": "external",
            "summary": "`CfnService.PlacementConstraintProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 721
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementconstraint.html#cfn-ecs-service-placementconstraint-expression",
            "stability": "external",
            "summary": "`CfnService.PlacementConstraintProperty.Expression`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 716
          },
          "name": "expression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementstrategy.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 763
      },
      "name": "PlacementStrategyProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementstrategy.html#cfn-ecs-service-placementstrategy-type",
            "stability": "external",
            "summary": "`CfnService.PlacementStrategyProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 773
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementstrategy.html#cfn-ecs-service-placementstrategy-field",
            "stability": "external",
            "summary": "`CfnService.PlacementStrategyProperty.Field`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 768
          },
          "name": "field",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 815
      },
      "name": "ServiceRegistryProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-containername",
            "stability": "external",
            "summary": "`CfnService.ServiceRegistryProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 820
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-containerport",
            "stability": "external",
            "summary": "`CfnService.ServiceRegistryProperty.ContainerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 825
          },
          "name": "containerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-port",
            "stability": "external",
            "summary": "`CfnService.ServiceRegistryProperty.Port`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 830
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-registryarn",
            "stability": "external",
            "summary": "`CfnService.ServiceRegistryProperty.RegistryArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 835
          },
          "name": "registryArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnServiceProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECS::Service`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 125
      },
      "name": "CfnServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-taskdefinition",
            "stability": "external",
            "summary": "`AWS::ECS::Service.TaskDefinition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 131
          },
          "name": "taskDefinition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-cluster",
            "stability": "external",
            "summary": "`AWS::ECS::Service.Cluster`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 137
          },
          "name": "cluster",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentconfiguration",
            "stability": "external",
            "summary": "`AWS::ECS::Service.DeploymentConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 143
          },
          "name": "deploymentConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-desiredcount",
            "stability": "external",
            "summary": "`AWS::ECS::Service.DesiredCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 149
          },
          "name": "desiredCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableecsmanagedtags",
            "stability": "external",
            "summary": "`AWS::ECS::Service.EnableECSManagedTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 155
          },
          "name": "enableEcsManagedTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-healthcheckgraceperiodseconds",
            "stability": "external",
            "summary": "`AWS::ECS::Service.HealthCheckGracePeriodSeconds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 161
          },
          "name": "healthCheckGracePeriodSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-launchtype",
            "stability": "external",
            "summary": "`AWS::ECS::Service.LaunchType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 167
          },
          "name": "launchType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-loadbalancers",
            "stability": "external",
            "summary": "`AWS::ECS::Service.LoadBalancers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 173
          },
          "name": "loadBalancers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-networkconfiguration",
            "stability": "external",
            "summary": "`AWS::ECS::Service.NetworkConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 179
          },
          "name": "networkConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementconstraints",
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlacementConstraints`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 185
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementstrategies",
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlacementStrategies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 191
          },
          "name": "placementStrategies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-platformversion",
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlatformVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 197
          },
          "name": "platformVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-propagatetags",
            "stability": "external",
            "summary": "`AWS::ECS::Service.PropagateTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 203
          },
          "name": "propagateTags",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-role",
            "stability": "external",
            "summary": "`AWS::ECS::Service.Role`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 209
          },
          "name": "role",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-schedulingstrategy",
            "stability": "external",
            "summary": "`AWS::ECS::Service.SchedulingStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 215
          },
          "name": "schedulingStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-servicename",
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 221
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-serviceregistries",
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceRegistries`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 227
          },
          "name": "serviceRegistries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-tags",
            "stability": "external",
            "summary": "`AWS::ECS::Service.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 233
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECS::TaskDefinition"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECS::TaskDefinition`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECS::TaskDefinition`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinitionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1031
      },
      "methods": [
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1165
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTaskDefinition",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1035
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1147
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-tags",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1107
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-containerdefinitions",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ContainerDefinitions`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1041
          },
          "name": "containerDefinitions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-cpu",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Cpu`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1047
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-executionrolearn",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ExecutionRoleArn`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1053
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-family",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Family`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1059
          },
          "name": "family",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-ipcmode",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.IpcMode`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1065
          },
          "name": "ipcMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-memory",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Memory`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1071
          },
          "name": "memory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-networkmode",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.NetworkMode`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1077
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-pidmode",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.PidMode`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1083
          },
          "name": "pidMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-placementconstraints",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.PlacementConstraints`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1089
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-proxyconfiguration",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ProxyConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1095
          },
          "name": "proxyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-requirescompatibilities",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.RequiresCompatibilities`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1101
          },
          "name": "requiresCompatibilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-taskrolearn",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.TaskRoleArn`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1113
          },
          "name": "taskRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-volumes",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Volumes`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1119
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1175
      },
      "name": "ContainerDefinitionProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-command",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Command`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1180
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-cpu",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Cpu`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1185
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dependson",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DependsOn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1190
          },
          "name": "dependsOn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDependencyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-disablenetworking",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DisableNetworking`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1195
          },
          "name": "disableNetworking",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dnssearchdomains",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DnsSearchDomains`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1200
          },
          "name": "dnsSearchDomains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dnsservers",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DnsServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1205
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dockerlabels",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DockerLabels`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1210
          },
          "name": "dockerLabels",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dockersecurityoptions",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DockerSecurityOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1215
          },
          "name": "dockerSecurityOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-entrypoint",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.EntryPoint`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1220
          },
          "name": "entryPoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-environment",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Environment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1225
          },
          "name": "environment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KeyValuePairProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-essential",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Essential`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1230
          },
          "name": "essential",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-extrahosts",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.ExtraHosts`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1235
          },
          "name": "extraHosts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HostEntryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-healthcheck",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.HealthCheck`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1240
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HealthCheckProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-hostname",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Hostname`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1245
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-image",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Image`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1250
          },
          "name": "image",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-interactive",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Interactive`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1255
          },
          "name": "interactive",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-links",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Links`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1260
          },
          "name": "links",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-linuxparameters",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.LinuxParameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1265
          },
          "name": "linuxParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LinuxParametersProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.LogConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1270
          },
          "name": "logConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LogConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-memory",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Memory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1275
          },
          "name": "memory",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-memoryreservation",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.MemoryReservation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1280
          },
          "name": "memoryReservation",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.MountPoints`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1285
          },
          "name": "mountPoints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.MountPointProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-name",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1290
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-portmappings",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.PortMappings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1295
          },
          "name": "portMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.PortMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-privileged",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Privileged`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1300
          },
          "name": "privileged",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-pseudoterminal",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.PseudoTerminal`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1305
          },
          "name": "pseudoTerminal",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-readonlyrootfilesystem",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.ReadonlyRootFilesystem`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1310
          },
          "name": "readonlyRootFilesystem",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-repositorycredentials",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.RepositoryCredentials`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1315
          },
          "name": "repositoryCredentials",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.RepositoryCredentialsProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-resourcerequirements",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.ResourceRequirements`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1320
          },
          "name": "resourceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ResourceRequirementProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-secrets",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Secrets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1325
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SecretProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-starttimeout",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.StartTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1330
          },
          "name": "startTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-stoptimeout",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.StopTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1335
          },
          "name": "stopTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-systemcontrols",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.SystemControls`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1340
          },
          "name": "systemControls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SystemControlProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-ulimits",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Ulimits`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1345
          },
          "name": "ulimits",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.UlimitProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-user",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.User`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1350
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.VolumesFrom`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1355
          },
          "name": "volumesFrom",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeFromProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-workingdirectory",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.WorkingDirectory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1360
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDependencyProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdependency.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDependencyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1471
      },
      "name": "ContainerDependencyProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdependency.html#cfn-ecs-taskdefinition-containerdependency-condition",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDependencyProperty.Condition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1476
          },
          "name": "condition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdependency.html#cfn-ecs-taskdefinition-containerdependency-containername",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDependencyProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1481
          },
          "name": "containerName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.DeviceProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.DeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1524
      },
      "name": "DeviceProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html#cfn-ecs-taskdefinition-device-hostpath",
            "stability": "external",
            "summary": "`CfnTaskDefinition.DeviceProperty.HostPath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1534
          },
          "name": "hostPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html#cfn-ecs-taskdefinition-device-containerpath",
            "stability": "external",
            "summary": "`CfnTaskDefinition.DeviceProperty.ContainerPath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1529
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html#cfn-ecs-taskdefinition-device-permissions",
            "stability": "external",
            "summary": "`CfnTaskDefinition.DeviceProperty.Permissions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1539
          },
          "name": "permissions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.DockerVolumeConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.DockerVolumeConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1583
      },
      "name": "DockerVolumeConfigurationProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-autoprovision",
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.Autoprovision`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1588
          },
          "name": "autoprovision",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-driver",
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.Driver`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1593
          },
          "name": "driver",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-driveropts",
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.DriverOpts`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1598
          },
          "name": "driverOpts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-labels",
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.Labels`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1603
          },
          "name": "labels",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-scope",
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.Scope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1608
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.HealthCheckProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HealthCheckProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1655
      },
      "name": "HealthCheckProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-command",
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.Command`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1660
          },
          "name": "command",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-interval",
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.Interval`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1665
          },
          "name": "interval",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-retries",
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.Retries`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1670
          },
          "name": "retries",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-startperiod",
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.StartPeriod`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1675
          },
          "name": "startPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-timeout",
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.Timeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1680
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.HostEntryProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HostEntryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1728
      },
      "name": "HostEntryProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html#cfn-ecs-taskdefinition-containerdefinition-hostentry-hostname",
            "stability": "external",
            "summary": "`CfnTaskDefinition.HostEntryProperty.Hostname`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1733
          },
          "name": "hostname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html#cfn-ecs-taskdefinition-containerdefinition-hostentry-ipaddress",
            "stability": "external",
            "summary": "`CfnTaskDefinition.HostEntryProperty.IpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1738
          },
          "name": "ipAddress",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.HostVolumePropertiesProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HostVolumePropertiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1781
      },
      "name": "HostVolumePropertiesProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html#cfn-ecs-taskdefinition-volumes-host-sourcepath",
            "stability": "external",
            "summary": "`CfnTaskDefinition.HostVolumePropertiesProperty.SourcePath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1786
          },
          "name": "sourcePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.KernelCapabilitiesProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-kernelcapabilities.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KernelCapabilitiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1825
      },
      "name": "KernelCapabilitiesProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-kernelcapabilities.html#cfn-ecs-taskdefinition-kernelcapabilities-add",
            "stability": "external",
            "summary": "`CfnTaskDefinition.KernelCapabilitiesProperty.Add`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1830
          },
          "name": "add",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-kernelcapabilities.html#cfn-ecs-taskdefinition-kernelcapabilities-drop",
            "stability": "external",
            "summary": "`CfnTaskDefinition.KernelCapabilitiesProperty.Drop`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1835
          },
          "name": "drop",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.KeyValuePairProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KeyValuePairProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1876
      },
      "name": "KeyValuePairProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html#cfn-ecs-taskdefinition-containerdefinition-environment-name",
            "stability": "external",
            "summary": "`CfnTaskDefinition.KeyValuePairProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1881
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html#cfn-ecs-taskdefinition-containerdefinition-environment-value",
            "stability": "external",
            "summary": "`CfnTaskDefinition.KeyValuePairProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1886
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.LinuxParametersProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LinuxParametersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1927
      },
      "name": "LinuxParametersProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-capabilities",
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.Capabilities`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1932
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KernelCapabilitiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-devices",
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.Devices`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1937
          },
          "name": "devices",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.DeviceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-initprocessenabled",
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.InitProcessEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1942
          },
          "name": "initProcessEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-sharedmemorysize",
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.SharedMemorySize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1947
          },
          "name": "sharedMemorySize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-tmpfs",
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.Tmpfs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1952
          },
          "name": "tmpfs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TmpfsProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.LogConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LogConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1999
      },
      "name": "LogConfigurationProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration-logdriver",
            "stability": "external",
            "summary": "`CfnTaskDefinition.LogConfigurationProperty.LogDriver`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2004
          },
          "name": "logDriver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration-options",
            "stability": "external",
            "summary": "`CfnTaskDefinition.LogConfigurationProperty.Options`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2009
          },
          "name": "options",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html#cfn-ecs-taskdefinition-logconfiguration-secretoptions",
            "stability": "external",
            "summary": "`CfnTaskDefinition.LogConfigurationProperty.SecretOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2014
          },
          "name": "secretOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SecretProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.MountPointProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.MountPointProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2058
      },
      "name": "MountPointProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints-containerpath",
            "stability": "external",
            "summary": "`CfnTaskDefinition.MountPointProperty.ContainerPath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2063
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints-readonly",
            "stability": "external",
            "summary": "`CfnTaskDefinition.MountPointProperty.ReadOnly`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2068
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints-sourcevolume",
            "stability": "external",
            "summary": "`CfnTaskDefinition.MountPointProperty.SourceVolume`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2073
          },
          "name": "sourceVolume",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.PortMappingProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.PortMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2116
      },
      "name": "PortMappingProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-containerport",
            "stability": "external",
            "summary": "`CfnTaskDefinition.PortMappingProperty.ContainerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2121
          },
          "name": "containerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-readonly",
            "stability": "external",
            "summary": "`CfnTaskDefinition.PortMappingProperty.HostPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2126
          },
          "name": "hostPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-sourcevolume",
            "stability": "external",
            "summary": "`CfnTaskDefinition.PortMappingProperty.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2131
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-proxyconfiguration.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2174
      },
      "name": "ProxyConfigurationProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-proxyconfiguration.html#cfn-ecs-taskdefinition-proxyconfiguration-containername",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ProxyConfigurationProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2179
          },
          "name": "containerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-proxyconfiguration.html#cfn-ecs-taskdefinition-proxyconfiguration-proxyconfigurationproperties",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ProxyConfigurationProperty.ProxyConfigurationProperties`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2184
          },
          "name": "proxyConfigurationProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KeyValuePairProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-proxyconfiguration.html#cfn-ecs-taskdefinition-proxyconfiguration-type",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ProxyConfigurationProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2189
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.RepositoryCredentialsProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-repositorycredentials.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.RepositoryCredentialsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2233
      },
      "name": "RepositoryCredentialsProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-repositorycredentials.html#cfn-ecs-taskdefinition-repositorycredentials-credentialsparameter",
            "stability": "external",
            "summary": "`CfnTaskDefinition.RepositoryCredentialsProperty.CredentialsParameter`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2238
          },
          "name": "credentialsParameter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.ResourceRequirementProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-resourcerequirement.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ResourceRequirementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2277
      },
      "name": "ResourceRequirementProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-resourcerequirement.html#cfn-ecs-taskdefinition-resourcerequirement-type",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ResourceRequirementProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2282
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-resourcerequirement.html#cfn-ecs-taskdefinition-resourcerequirement-value",
            "stability": "external",
            "summary": "`CfnTaskDefinition.ResourceRequirementProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2287
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.SecretProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-secret.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SecretProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2330
      },
      "name": "SecretProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-secret.html#cfn-ecs-taskdefinition-secret-name",
            "stability": "external",
            "summary": "`CfnTaskDefinition.SecretProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2335
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-secret.html#cfn-ecs-taskdefinition-secret-valuefrom",
            "stability": "external",
            "summary": "`CfnTaskDefinition.SecretProperty.ValueFrom`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2340
          },
          "name": "valueFrom",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.SystemControlProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-systemcontrol.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SystemControlProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2383
      },
      "name": "SystemControlProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-systemcontrol.html#cfn-ecs-taskdefinition-systemcontrol-namespace",
            "stability": "external",
            "summary": "`CfnTaskDefinition.SystemControlProperty.Namespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2388
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-systemcontrol.html#cfn-ecs-taskdefinition-systemcontrol-value",
            "stability": "external",
            "summary": "`CfnTaskDefinition.SystemControlProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2393
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-taskdefinitionplacementconstraint.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2436
      },
      "name": "TaskDefinitionPlacementConstraintProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-taskdefinitionplacementconstraint.html#cfn-ecs-taskdefinition-taskdefinitionplacementconstraint-type",
            "stability": "external",
            "summary": "`CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2446
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-taskdefinitionplacementconstraint.html#cfn-ecs-taskdefinition-taskdefinitionplacementconstraint-expression",
            "stability": "external",
            "summary": "`CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty.Expression`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2441
          },
          "name": "expression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.TmpfsProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TmpfsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2488
      },
      "name": "TmpfsProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html#cfn-ecs-taskdefinition-tmpfs-size",
            "stability": "external",
            "summary": "`CfnTaskDefinition.TmpfsProperty.Size`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2503
          },
          "name": "size",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html#cfn-ecs-taskdefinition-tmpfs-containerpath",
            "stability": "external",
            "summary": "`CfnTaskDefinition.TmpfsProperty.ContainerPath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2493
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html#cfn-ecs-taskdefinition-tmpfs-mountoptions",
            "stability": "external",
            "summary": "`CfnTaskDefinition.TmpfsProperty.MountOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2498
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.UlimitProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.UlimitProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2547
      },
      "name": "UlimitProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html#cfn-ecs-taskdefinition-containerdefinition-ulimit-hardlimit",
            "stability": "external",
            "summary": "`CfnTaskDefinition.UlimitProperty.HardLimit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2552
          },
          "name": "hardLimit",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html#cfn-ecs-taskdefinition-containerdefinition-ulimit-name",
            "stability": "external",
            "summary": "`CfnTaskDefinition.UlimitProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2557
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html#cfn-ecs-taskdefinition-containerdefinition-ulimit-softlimit",
            "stability": "external",
            "summary": "`CfnTaskDefinition.UlimitProperty.SoftLimit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2562
          },
          "name": "softLimit",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeFromProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeFromProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2666
      },
      "name": "VolumeFromProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom-readonly",
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeFromProperty.ReadOnly`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2671
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom-sourcecontainer",
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeFromProperty.SourceContainer`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2676
          },
          "name": "sourceContainer",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2608
      },
      "name": "VolumeProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volume-dockervolumeconfiguration",
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeProperty.DockerVolumeConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2613
          },
          "name": "dockerVolumeConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.DockerVolumeConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volumes-host",
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeProperty.Host`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2618
          },
          "name": "host",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HostVolumePropertiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volumes-name",
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2623
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECS::TaskDefinition`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinitionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 881
      },
      "name": "CfnTaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-containerdefinitions",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ContainerDefinitions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 887
          },
          "name": "containerDefinitions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-cpu",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Cpu`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 893
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-executionrolearn",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ExecutionRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 899
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-family",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Family`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 905
          },
          "name": "family",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-ipcmode",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.IpcMode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 911
          },
          "name": "ipcMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-memory",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Memory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 917
          },
          "name": "memory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-networkmode",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.NetworkMode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 923
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-pidmode",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.PidMode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 929
          },
          "name": "pidMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-placementconstraints",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.PlacementConstraints`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 935
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-proxyconfiguration",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ProxyConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 941
          },
          "name": "proxyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-requirescompatibilities",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.RequiresCompatibilities`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 947
          },
          "name": "requiresCompatibilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-tags",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 953
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-taskrolearn",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.TaskRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 959
          },
          "name": "taskRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-volumes",
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Volumes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 965
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CloudMapNamespaceOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The options for creating an AWS Cloud Map namespace."
      },
      "fqn": "@aws-cdk/aws-ecs.CloudMapNamespaceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 640
      },
      "name": "CloudMapNamespaceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the namespace, such as example.com."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 644
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PrivateDns",
            "stability": "stable",
            "summary": "The type of CloudMap Namespace to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 651
          },
          "name": "type",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.NamespaceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "VPC of the cluster for Private DNS Namespace, otherwise none",
            "remarks": "This property is required for private DNS namespaces.",
            "stability": "stable",
            "summary": "The VPC to associate the namespace with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 658
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CloudMapOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The options to enabling AWS Cloud Map for an Amazon ECS service."
      },
      "fqn": "@aws-cdk/aws-ecs.CloudMapOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 446
      },
      "name": "CloudMapOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": ": A",
            "remarks": "The supported record types are A or SRV.",
            "stability": "stable",
            "summary": "The DNS record type that you want AWS Cloud Map to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 459
          },
          "name": "dnsRecordType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.DnsRecordType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "60",
            "stability": "stable",
            "summary": "The amount of time that you want DNS resolvers to cache the settings for this record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 466
          },
          "name": "dnsTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "NOTE: This is used for HealthCheckCustomConfig",
            "stability": "stable",
            "summary": "The number of 30-second intervals that you want Cloud Map to wait after receiving an UpdateInstanceCustomHealthStatus request before it changes the health status of a service instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 474
          },
          "name": "failureThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CloudFormation-generated name",
            "stability": "stable",
            "summary": "The name of the Cloud Map service to attach to the ECS service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 452
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Cluster": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A regional grouping of one or more container instances on which you can run tasks and services."
      },
      "fqn": "@aws-cdk/aws-ecs.Cluster",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the Cluster class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.ICluster"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 48
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing cluster to the stack from its attributes."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 52
          },
          "name": "fromClusterAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ClusterAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ICluster"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds compute capacity to a cluster using the specified AutoScalingGroup."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 182
          },
          "name": "addAutoScalingGroup",
          "parameters": [
            {
              "docs": {
                "summary": "the ASG to add to this cluster. [disable-awslint:ref-via-interface] is needed in order to install the ECS agent by updating the ASGs user data."
              },
              "name": "autoScalingGroup",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AddAutoScalingGroupCapacityOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Returns the AutoScalingGroup so you can add autoscaling settings to it.",
            "stability": "stable",
            "summary": "This method adds compute capacity to a cluster by creating an AutoScalingGroup with the specified options."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 161
          },
          "name": "addCapacity",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AddCapacityOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add an AWS Cloud Map DNS namespace for this cluster. NOTE: HttpNamespaces are not supported, as ECS always requires a DNSConfig when registering an instance to a Cloud Map service."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 126
          },
          "name": "addDefaultCloudMapNamespace",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.CloudMapNamespaceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method returns the specifed CloudWatch metric for this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 261
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters CPU reservation."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 245
          },
          "name": "metricCpuReservation",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters memory reservation."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 254
          },
          "name": "metricMemoryReservation",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "Cluster",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) that identifies the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 69
          },
          "name": "clusterArn",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 74
          },
          "name": "clusterName",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Manage the allowed network connections for the cluster with Security Groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 59
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the cluster has EC2 capacity associated with it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 236
          },
          "name": "hasEc2Capacity",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The VPC associated with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 64
          },
          "name": "vpc",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Getter for autoscaling group added to cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 229
          },
          "name": "autoscalingGroup",
          "optional": true,
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Getter for namespace added to cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 152
          },
          "name": "defaultCloudMapNamespace",
          "optional": true,
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ClusterAttributes": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties to import from the ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.ClusterAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 489
      },
      "name": "ClusterAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 493
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The security groups associated with the container instances registered to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 510
          },
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC associated with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 505
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No default autoscaling group",
            "stability": "stable",
            "summary": "Autoscaling group added to the cluster if capacity is added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 531
          },
          "name": "autoscalingGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Derived from clusterName",
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) that identifies the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 500
          },
          "name": "clusterArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No default namespace",
            "stability": "stable",
            "summary": "The AWS Cloud Map namespace to associate with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 524
          },
          "name": "defaultCloudMapNamespace",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Specifies whether the cluster has EC2 instance capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 517
          },
          "name": "hasEc2Capacity",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ClusterProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties used to define an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.ClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 14
      },
      "name": "ClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no EC2 capacity will be added, you can use `addCapacity` to add capacity later.",
            "stability": "stable",
            "summary": "The ec2 capacity to add to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 42
          },
          "name": "capacity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.AddCapacityOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CloudFormation-generated name",
            "stability": "stable",
            "summary": "The name for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 20
          },
          "name": "clusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no service discovery namespace created, you can use `addDefaultCloudMapNamespace` to add a\ndefault service discovery namespace later.",
            "stability": "stable",
            "summary": "The service discovery namespace created in this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 35
          },
          "name": "defaultCloudMapNamespace",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.CloudMapNamespaceOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- creates a new VPC with two AZs",
            "stability": "stable",
            "summary": "The VPC where your ECS instances will be running or your ENIs will be deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 27
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CommonTaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "For more information, see\n[Task Definition Parameters](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html).",
        "stability": "stable",
        "summary": "The common properties for all task definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.CommonTaskDefinitionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 42
      },
      "name": "CommonTaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- An execution role will be automatically created if you use ECR images in your task definition.",
            "remarks": "The role will be used to retrieve container images from ECR and create CloudWatch log groups.",
            "stability": "stable",
            "summary": "The name of the IAM task execution role that grants the ECS agent to call AWS APIs on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 57
          },
          "name": "executionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name.",
            "remarks": "A family groups multiple versions of a task definition.",
            "stability": "stable",
            "summary": "The name of a family that this task definition is registered to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 48
          },
          "name": "family",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A task role is automatically created for you.",
            "stability": "stable",
            "summary": "The name of the IAM role that grants containers in the task permission to call AWS APIs on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 64
          },
          "name": "taskRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No volumes are passed to the Docker daemon on a container instance.",
            "remarks": "For more information, see\n[Task Definition Parameter Volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide//task_definition_parameters.html#volumes).",
            "stability": "stable",
            "summary": "The list of volume definitions for the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 72
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Volume"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Compatibility": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The task launch type compatibility requirement."
      },
      "fqn": "@aws-cdk/aws-ecs.Compatibility",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 520
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The task should specify the EC2 launch type."
          },
          "name": "EC2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task should specify the Fargate launch type."
          },
          "name": "FARGATE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task can specify either the EC2 or Fargate launch types."
          },
          "name": "EC2_AND_FARGATE"
        }
      ],
      "name": "Compatibility"
    },
    "@aws-cdk/aws-ecs.ContainerDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "A container definition is used in a task definition to describe the containers that are launched as part of a task."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDefinition",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the ContainerDefinition class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerDefinitionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 260
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more container dependencies to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 432
          },
          "name": "addContainerDependencies",
          "parameters": [
            {
              "name": "containerDependencies",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDependency"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This parameter is only supported if the task definition is using the bridge network mode.\nWarning: The --link flag is a legacy feature of Docker. It may eventually be removed.",
            "stability": "stable",
            "summary": "This method adds a link which allows containers to communicate with each other without the need for port mappings."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 357
          },
          "name": "addLink",
          "parameters": [
            {
              "name": "container",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            },
            {
              "name": "alias",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more mount points for data volumes to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 371
          },
          "name": "addMountPoints",
          "parameters": [
            {
              "name": "mountPoints",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.MountPoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more port mappings to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 401
          },
          "name": "addPortMappings",
          "parameters": [
            {
              "name": "portMappings",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.PortMapping"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This adds the correct container mountPoint and task definition volume.",
            "stability": "stable",
            "summary": "This method mounts temporary disk space to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 380
          },
          "name": "addScratch",
          "parameters": [
            {
              "name": "scratch",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ScratchSpace"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds the specified statement to the IAM task execution policy in the task definition."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 446
          },
          "name": "addToExecutionPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more ulimits to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 425
          },
          "name": "addUlimits",
          "parameters": [
            {
              "name": "ulimits",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Ulimit"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more volumes to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 439
          },
          "name": "addVolumesFrom",
          "parameters": [
            {
              "name": "volumesFrom",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.VolumeFrom"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Render this container definition to a CloudFormation object."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 487
          },
          "name": "renderContainerDefinition",
          "parameters": [
            {
              "docs": {
                "summary": "[disable-awslint:ref-via-interface] (made optional to avoid breaking change)."
              },
              "name": "taskDefinition",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty"
            }
          }
        }
      ],
      "name": "ContainerDefinition",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "An array dependencies defined for container startup and shutdown."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 290
          },
          "name": "containerDependencies",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDependency"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 307
          },
          "name": "containerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The port the container will listen on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 474
          },
          "name": "containerPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "remarks": "If the essential parameter of a container is marked as true, and that container\nfails or stops for any reason, all other containers that are part of the task are\nstopped. If the essential parameter of a container is marked as false, then its\nfailure does not affect the rest of the containers in a task.\n\nIf this parameter isomitted, a container is assumed to be essential.",
            "stability": "stable",
            "summary": "Specifies whether the container will be marked essential."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 302
          },
          "name": "essential",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "This property is only used for tasks that use the awsvpc network mode.",
            "stability": "stable",
            "summary": "The inbound rules associated with the security group the task or service will use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 455
          },
          "name": "ingressPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether there was at least one memory limit specified in this definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 312
          },
          "name": "memoryLimitSpecified",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The mount points for data volumes in your container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 269
          },
          "name": "mountPoints",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.MountPoint"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Port mappings allow containers to access ports\non the host container instance to send or receive traffic.",
            "stability": "stable",
            "summary": "The list of port mappings for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 275
          },
          "name": "portMappings",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PortMapping"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the task definition that includes this container definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 317
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An array of ulimits to set in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 285
          },
          "name": "ulimits",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Ulimit"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The data volumes to mount from another container in the same task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 280
          },
          "name": "volumesFrom",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.VolumeFrom"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Linux-specific modifications that are applied to the container, such as Linux kernel capabilities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 264
          },
          "name": "linuxParameters",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LinuxParameters"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ContainerDefinitionOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDefinitionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 44
      },
      "name": "ContainerDefinitionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This string is passed directly to the Docker daemon.\nImages in the Docker Hub registry are available by default.\nOther repositories are specified with either repository-url/image:tag or repository-url/image@digest.\nTODO: Update these to specify using classes of IContainerImage",
            "stability": "stable",
            "summary": "The image used to start a container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 53
          },
          "name": "image",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CMD value built into container image.",
            "remarks": "If you provide a shell command as a single string, you have to quote command-line arguments.",
            "stability": "stable",
            "summary": "The command that is passed to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 62
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No minimum CPU units reserved.",
            "stability": "stable",
            "summary": "The minimum number of CPU units to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 69
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When this parameter is true, networking is disabled within the container.",
            "stability": "stable",
            "summary": "Specifies whether networking is disabled within the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 78
          },
          "name": "disableNetworking",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No search domains.",
            "stability": "stable",
            "summary": "A list of DNS search domains that are presented to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 85
          },
          "name": "dnsSearchDomains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default DNS servers.",
            "stability": "stable",
            "summary": "A list of DNS servers that are presented to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 92
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No labels.",
            "stability": "stable",
            "summary": "A key/value map of labels to add to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 99
          },
          "name": "dockerLabels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No security labels.",
            "stability": "stable",
            "summary": "A list of strings to provide custom labels for SELinux and AppArmor multi-level security systems."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 106
          },
          "name": "dockerSecurityOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Entry point configured in container.",
            "see": "https://docs.docker.com/engine/reference/builder/#entrypoint",
            "stability": "stable",
            "summary": "The ENTRYPOINT value to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 115
          },
          "name": "entryPoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment variables.",
            "stability": "stable",
            "summary": "The environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 122
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If the essential parameter of a container is marked as true, and that container fails\nor stops for any reason, all other containers that are part of the task are stopped.\nIf the essential parameter of a container is marked as false, then its failure does not\naffect the rest of the containers in a task. All tasks must have at least one essential container.\n\nIf this parameter is omitted, a container is assumed to be essential.",
            "stability": "stable",
            "summary": "Specifies whether the container is marked essential."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 143
          },
          "name": "essential",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No extra hosts.",
            "stability": "stable",
            "summary": "A list of hostnames and IP address mappings to append to the /etc/hosts file on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 150
          },
          "name": "extraHosts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No GPUs assigned.",
            "stability": "stable",
            "summary": "The number of GPUs assigned to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 242
          },
          "name": "gpuCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Health check configuration from container.",
            "stability": "stable",
            "summary": "The health check command and associated configuration parameters for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 157
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.HealthCheck"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatic hostname.",
            "stability": "stable",
            "summary": "The hostname to use for your container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 164
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Linux paramters.",
            "stability": "stable",
            "summary": "Linux-specific modifications that are applied to the container, such as Linux kernel capabilities. For more information see [KernelCapabilities](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 235
          },
          "name": "linuxParameters",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LinuxParameters"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Containers use the same logging driver that the Docker daemon uses.",
            "stability": "stable",
            "summary": "The log configuration specification for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 227
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LogDriver"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory limit.",
            "remarks": "If your container attempts to exceed the allocated memory, the container\nis terminated.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.",
            "stability": "stable",
            "summary": "The amount (in MiB) of memory to present to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 176
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory reserved.",
            "remarks": "When system memory is under heavy contention, Docker attempts to keep the\ncontainer memory to this soft limit. However, your container can consume more\nmemory when it needs to, up to either the hard limit specified with the memory\nparameter (if applicable), or all of the available memory on the container\ninstance, whichever comes first.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.",
            "stability": "stable",
            "summary": "The soft limit (in MiB) of memory to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 191
          },
          "name": "memoryReservationMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether the container is marked as privileged. When this parameter is true, the container is given elevated privileges on the host container instance (similar to the root user)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 199
          },
          "name": "privileged",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "When this parameter is true, the container is given read-only access to its root file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 206
          },
          "name": "readonlyRootFilesystem",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No secret environment variables.",
            "stability": "stable",
            "summary": "The secret environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 129
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Secret"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "root",
            "stability": "stable",
            "summary": "The user name to use inside the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 213
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/",
            "stability": "stable",
            "summary": "The working directory in which to run commands inside the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 220
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ContainerDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties in a container definition."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDefinitionProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.ContainerDefinitionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 248
      },
      "name": "ContainerDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The name of the task definition that includes this container definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 254
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ContainerDependency": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDependency.html",
        "stability": "stable",
        "summary": "The details of a dependency on another container in the task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDependency",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 688
      },
      "name": "ContainerDependency",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The container to depend on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 692
          },
          "name": "container",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ContainerDependencyCondition.HEALTHY",
            "stability": "stable",
            "summary": "The state the container needs to be in to satisfy the dependency and proceed with startup. Valid values are ContainerDependencyCondition.START, ContainerDependencyCondition.COMPLETE, ContainerDependencyCondition.SUCCESS and ContainerDependencyCondition.HEALTHY."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 701
          },
          "name": "condition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerDependencyCondition"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ContainerDependencyCondition": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDependencyCondition",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 704
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "This condition emulates the behavior of links and volumes today. It validates that a dependent container is started before permitting other containers to start."
          },
          "name": "START"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This condition validates that a dependent container runs to completion (exits) before permitting other containers to start. This can be useful for nonessential containers that run a script and then exit."
          },
          "name": "COMPLETE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This condition is the same as COMPLETE, but it also requires that the container exits with a zero status."
          },
          "name": "SUCCESS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This condition validates that the dependent container passes its Docker health check before permitting other containers to start. This requires that the dependent container has health checks configured. This condition is confirmed only at task startup."
          },
          "name": "HEALTHY"
        }
      ],
      "name": "ContainerDependencyCondition"
    },
    "@aws-cdk/aws-ecs.ContainerImage": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Constructs for types of container images."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerImage",
      "initializer": {},
      "kind": "class",
      "locationInModule": {
        "filename": "lib/container-image.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference an image that's constructed directly from sources on disk."
          },
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 29
          },
          "name": "fromAsset",
          "parameters": [
            {
              "docs": {
                "summary": "The directory containing the Dockerfile."
              },
              "name": "directory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AssetImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.AssetImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference an image in an ECR repository."
          },
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 20
          },
          "name": "fromEcrRepository",
          "parameters": [
            {
              "name": "repository",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.IRepository"
              }
            },
            {
              "name": "tag",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcrImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference an image on DockerHub or another online registry."
          },
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 13
          },
          "name": "fromRegistry",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.RepositoryImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.RepositoryImage"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a ContainerDefinition."
          },
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 36
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig"
            }
          }
        }
      ],
      "name": "ContainerImage"
    },
    "@aws-cdk/aws-ecs.ContainerImageConfig": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The configuration for creating a container image."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-image.ts",
        "line": 42
      },
      "name": "ContainerImageConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies the name of the container image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 46
          },
          "name": "imageName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies the credentials used to access the image repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 51
          },
          "name": "repositoryCredentials",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.RepositoryCredentialsProperty"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CpuUtilizationScalingProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for enabling scaling based on CPU utilization."
      },
      "fqn": "@aws-cdk/aws-ecs.CpuUtilizationScalingProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 104
      },
      "name": "CpuUtilizationScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target value for CPU utilization across all tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 108
          },
          "name": "targetUtilizationPercent",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Device": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A container instance host device."
      },
      "fqn": "@aws-cdk/aws-ecs.Device",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 121
      },
      "name": "Device",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path for the device on the host container instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 132
          },
          "name": "hostPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Same path as the host",
            "stability": "stable",
            "summary": "The path inside the container at which to expose the host device."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 127
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Readonly",
            "stability": "stable",
            "summary": "The explicit permissions to provide to the container for the device. By default, the container has permissions for read, write, and mknod for the device."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 140
          },
          "name": "permissions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.DevicePermission"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.DevicePermission": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Permissions for device access."
      },
      "fqn": "@aws-cdk/aws-ecs.DevicePermission",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 227
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Read."
          },
          "name": "READ"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Write."
          },
          "name": "WRITE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Make a node."
          },
          "name": "MKNOD"
        }
      ],
      "name": "DevicePermission"
    },
    "@aws-cdk/aws-ecs.DockerVolumeConfiguration": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "Docker volumes are only supported when you are using the EC2 launch type.",
        "stability": "stable",
        "summary": "The configuration for a Docker volume."
      },
      "fqn": "@aws-cdk/aws-ecs.DockerVolumeConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 470
      },
      "name": "DockerVolumeConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Docker volume driver to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 481
          },
          "name": "driver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scope for the Docker volume that determines its lifecycle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 497
          },
          "name": "scope",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Scope"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether the Docker volume should be created if it does not already exist. If true is specified, the Docker volume will be created for you."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 477
          },
          "name": "autoprovision",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No options",
            "stability": "stable",
            "summary": "A map of Docker driver-specific options passed through."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 487
          },
          "name": "driverOpts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No labels",
            "stability": "stable",
            "summary": "Custom metadata to add to your Docker volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 493
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Ec2Service": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.BaseService",
      "docs": {
        "custom": {
          "resource": "AWS::ECS::Service"
        },
        "stability": "stable",
        "summary": "This creates a service using the EC2 launch type on an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.Ec2Service",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the Ec2Service class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Ec2ServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IEc2Service",
        "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2/ec2-service.ts",
        "line": 95
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports from the specified service ARN."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 100
          },
          "name": "fromEc2ServiceArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "ec2ServiceArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IEc2Service"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For more information, see\n[Amazon ECS Task Placement Constraints](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html).",
            "stability": "stable",
            "summary": "Adds one or more placement strategies to use for tasks in the service."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 187
          },
          "name": "addPlacementConstraints",
          "parameters": [
            {
              "name": "constraints",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "For more information, see\n[Amazon ECS Task Placement Strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html).",
            "stability": "stable",
            "summary": "Adds one or more placement strategies to use for tasks in the service."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 173
          },
          "name": "addPlacementStrategies",
          "parameters": [
            {
              "name": "strategies",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Don't call this. Call `loadBalancer.addTarget()` instead.",
            "stability": "stable",
            "summary": "Registers the service as a target of a Classic Load Balancer (CLB)."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 198
          },
          "name": "attachToClassicLB",
          "overrides": "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget",
          "parameters": [
            {
              "name": "loadBalancer",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancer"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Validates this Ec2Service."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 216
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Ec2Service"
    },
    "@aws-cdk/aws-ecs.Ec2ServiceProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for defining a service using the EC2 launch type."
      },
      "fqn": "@aws-cdk/aws-ecs.Ec2ServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseServiceOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2/ec2-service.ts",
        "line": 12
      },
      "name": "Ec2ServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The task definition to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 18
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Use subnet default.",
            "remarks": "This property is only used for tasks that use the awsvpc network mode.",
            "stability": "stable",
            "summary": "Specifies whether the task's elastic network interface receives a public IP address. If true, each task will receive a public IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 28
          },
          "name": "assignPublicIp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When you are using this strategy, do not specify a desired number of tasks orany task placement strategies.",
            "stability": "stable",
            "summary": "Specifies whether the service will use the daemon scheduling strategy. If true, the service scheduler deploys exactly one task on each container instance in your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 72
          },
          "name": "daemon",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No constraints.",
            "remarks": "For more information, see\n[Amazon ECS Task Placement Constraints](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html).",
            "stability": "stable",
            "summary": "The placement constraints to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 54
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No strategies.",
            "remarks": "For more information, see\n[Amazon ECS Task Placement Strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html).",
            "stability": "stable",
            "summary": "The placement strategies to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 62
          },
          "name": "placementStrategies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PropagatedTagSource.SERVICE",
            "stability": "stable",
            "summary": "Specifies whether to propagate the tags from the task definition or the service to the tasks in the service. Tags can only be propagated to the tasks within the service during service creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 80
          },
          "name": "propagateTaskTagsFrom",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.PropagatedTagSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new security group is created.",
            "remarks": "If you do not specify a security group, the default security group for the VPC is used.\n\nThis property is only used for tasks that use the awsvpc network mode.",
            "stability": "stable",
            "summary": "The security groups to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 46
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Private subnets.",
            "remarks": "This property is only used for tasks that use the awsvpc network mode.",
            "stability": "stable",
            "summary": "The subnets to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 37
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Ec2TaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.TaskDefinition",
      "docs": {
        "custom": {
          "resource": "AWS::ECS::TaskDefinition"
        },
        "stability": "stable",
        "summary": "The details of a task definition run on an EC2 cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.Ec2TaskDefinition",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the Ec2TaskDefinition class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Ec2TaskDefinitionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IEc2TaskDefinition"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2/ec2-task-definition.ts",
        "line": 40
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a task definition from the specified task definition ARN."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-task-definition.ts",
            "line": 45
          },
          "name": "fromEc2TaskDefinitionArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "ec2TaskDefinitionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IEc2TaskDefinition"
            }
          },
          "static": true
        }
      ],
      "name": "Ec2TaskDefinition"
    },
    "@aws-cdk/aws-ecs.Ec2TaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for a task definition run on an EC2 cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.Ec2TaskDefinitionProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.CommonTaskDefinitionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2/ec2-task-definition.ts",
        "line": 8
      },
      "name": "Ec2TaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- NetworkMode.Bridge for EC2 tasks, AwsVpc for Fargate tasks.",
            "remarks": "The valid values are none, bridge, awsvpc, and host.",
            "stability": "stable",
            "summary": "The Docker networking mode to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-task-definition.ts",
            "line": 16
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.NetworkMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No placement constraints.",
            "remarks": "You can\nspecify a maximum of 10 constraints per task (this limit includes\nconstraints in the task definition and those specified at run time).",
            "stability": "stable",
            "summary": "An array of placement constraint objects to use for the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-task-definition.ts",
            "line": 25
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.EcrImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.ContainerImage",
      "docs": {
        "stability": "stable",
        "summary": "An image from an Amazon ECR repository."
      },
      "fqn": "@aws-cdk/aws-ecs.EcrImage",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the EcrImage class."
        },
        "parameters": [
          {
            "name": "repository",
            "type": {
              "fqn": "@aws-cdk/aws-ecr.IRepository"
            }
          },
          {
            "name": "tag",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/images/ecr.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a ContainerDefinition."
          },
          "locationInModule": {
            "filename": "lib/images/ecr.ts",
            "line": 26
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.ContainerImage",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig"
            }
          }
        }
      ],
      "name": "EcrImage",
      "properties": [
        {
          "docs": {
            "remarks": "For example, 012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>:latest or\n012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE.",
            "stability": "stable",
            "summary": "The image name. Images in Amazon ECR repositories can be specified by either using the full registry/repository:tag or registry/repository@digest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/images/ecr.ts",
            "line": 17
          },
          "name": "imageName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.EcsOptimizedAmi": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "deprecated": "see {@link EcsOptimizedImage#amazonLinux}, {@link EcsOptimizedImage#amazonLinux} and {@link EcsOptimizedImage#windows}",
        "stability": "deprecated",
        "summary": "Construct a Linux or Windows machine image from the latest ECS Optimized AMI published in SSM."
      },
      "fqn": "@aws-cdk/aws-ecs.EcsOptimizedAmi",
      "initializer": {
        "docs": {
          "stability": "deprecated",
          "summary": "Constructs a new instance of the EcsOptimizedAmi class."
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcsOptimizedAmiProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 320
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Return the correct image."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 364
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "EcsOptimizedAmi"
    },
    "@aws-cdk/aws-ecs.EcsOptimizedAmiProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "deprecated": "see {@link EcsOptimizedImage}",
        "stability": "deprecated",
        "summary": "The properties that define which ECS-optimized AMI is used."
      },
      "fqn": "@aws-cdk/aws-ecs.EcsOptimizedAmiProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 289
      },
      "name": "EcsOptimizedAmiProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "AmazonLinuxGeneration.AmazonLinux2",
            "stability": "deprecated",
            "summary": "The Amazon Linux generation to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 295
          },
          "name": "generation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxGeneration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AmiHardwareType.Standard",
            "stability": "deprecated",
            "summary": "The ECS-optimized AMI variant to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 309
          },
          "name": "hardwareType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.AmiHardwareType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none, uses Linux generation",
            "stability": "deprecated",
            "summary": "The Windows Server version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 302
          },
          "name": "windowsVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.WindowsOptimizedVersion"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.EcsOptimizedImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Construct a Linux or Windows machine image from the latest ECS Optimized AMI published in SSM."
      },
      "fqn": "@aws-cdk/aws-ecs.EcsOptimizedImage",
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 376
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct an Amazon Linux AMI image from the latest ECS Optimized AMI published in SSM."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 389
          },
          "name": "amazonLinux",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcsOptimizedImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct an Amazon Linux 2 image from the latest ECS Optimized AMI published in SSM."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 382
          },
          "name": "amazonLinux2",
          "parameters": [
            {
              "docs": {
                "summary": "ECS-optimized AMI variant to use."
              },
              "name": "hardwareType",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AmiHardwareType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcsOptimizedImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct a Windows image from the latest ECS Optimized AMI published in SSM."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 398
          },
          "name": "windows",
          "parameters": [
            {
              "docs": {
                "summary": "Windows Version to use."
              },
              "name": "windowsVersion",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.WindowsOptimizedVersion"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcsOptimizedImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the correct image."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 435
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "EcsOptimizedImage"
    },
    "@aws-cdk/aws-ecs.FargatePlatformVersion": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html",
        "stability": "stable",
        "summary": "The platform version on which to run your service."
      },
      "fqn": "@aws-cdk/aws-ecs.FargatePlatformVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/fargate/fargate-service.ts",
        "line": 118
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The latest, recommended platform version."
          },
          "name": "LATEST"
        },
        {
          "docs": {
            "remarks": "Supports secrets, task recycling.",
            "stability": "stable",
            "summary": "Version 1.3.0."
          },
          "name": "VERSION1_3"
        },
        {
          "docs": {
            "remarks": "Supports private registries.",
            "stability": "stable",
            "summary": "Version 1.2.0."
          },
          "name": "VERSION1_2"
        },
        {
          "docs": {
            "remarks": "Supports task metadata, health checks, service discovery.",
            "stability": "stable",
            "summary": "Version 1.1.0."
          },
          "name": "VERSION1_1"
        },
        {
          "docs": {
            "remarks": "Based on Amazon Linux 2017.09.",
            "stability": "stable",
            "summary": "Initial release."
          },
          "name": "VERSION1_0"
        }
      ],
      "name": "FargatePlatformVersion"
    },
    "@aws-cdk/aws-ecs.FargateService": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.BaseService",
      "docs": {
        "custom": {
          "resource": "AWS::ECS::Service"
        },
        "stability": "stable",
        "summary": "This creates a service using the Fargate launch type on an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.FargateService",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the FargateService class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.FargateServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IFargateService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fargate/fargate-service.ts",
        "line": 73
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a task definition from the specified task definition ARN."
          },
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 78
          },
          "name": "fromFargateServiceArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "fargateServiceArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IFargateService"
            }
          },
          "static": true
        }
      ],
      "name": "FargateService"
    },
    "@aws-cdk/aws-ecs.FargateServiceProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for defining a service using the Fargate launch type."
      },
      "fqn": "@aws-cdk/aws-ecs.FargateServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseServiceOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/fargate-service.ts",
        "line": 10
      },
      "name": "FargateServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The task definition to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 16
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Use subnet default.",
            "remarks": "If true, each task will receive a public IP address.",
            "stability": "stable",
            "summary": "Specifies whether the task's elastic network interface receives a public IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 25
          },
          "name": "assignPublicIp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Latest",
            "remarks": "If one is not specified, the LATEST platform version is used by default. For more information, see\n[AWS Fargate Platform Versions](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html)\nin the Amazon Elastic Container Service Developer Guide.",
            "stability": "stable",
            "summary": "The platform version on which to run your service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 50
          },
          "name": "platformVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FargatePlatformVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PropagatedTagSource.SERVICE",
            "stability": "stable",
            "summary": "Specifies whether to propagate the tags from the task definition or the service to the tasks in the service. Tags can only be propagated to the tasks within the service during service creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 58
          },
          "name": "propagateTaskTagsFrom",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.PropagatedTagSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new security group is created.",
            "remarks": "If you do not specify a security group, the default security group for the VPC is used.",
            "stability": "stable",
            "summary": "The security groups to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 39
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Private subnets.",
            "stability": "stable",
            "summary": "The subnets to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 32
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FargateTaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.TaskDefinition",
      "docs": {
        "custom": {
          "resource": "AWS::ECS::TaskDefinition"
        },
        "stability": "stable",
        "summary": "The details of a task definition run on a Fargate cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.FargateTaskDefinition",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the FargateTaskDefinition class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.FargateTaskDefinitionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IFargateTaskDefinition"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fargate/fargate-task-definition.ts",
        "line": 50
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a task definition from the specified task definition ARN."
          },
          "locationInModule": {
            "filename": "lib/fargate/fargate-task-definition.ts",
            "line": 55
          },
          "name": "fromFargateTaskDefinitionArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "fargateTaskDefinitionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IFargateTaskDefinition"
            }
          },
          "static": true
        }
      ],
      "name": "FargateTaskDefinition",
      "properties": [
        {
          "docs": {
            "remarks": "Fargate tasks require the awsvpc network mode.",
            "stability": "stable",
            "summary": "The Docker networking mode to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-task-definition.ts",
            "line": 69
          },
          "name": "networkMode",
          "overrides": "@aws-cdk/aws-ecs.TaskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.NetworkMode"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FargateTaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for a task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.FargateTaskDefinitionProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.CommonTaskDefinitionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/fargate-task-definition.ts",
        "line": 7
      },
      "name": "FargateTaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "256",
            "remarks": "For tasks using the Fargate launch type,\nthis field is required and you must use one of the following values,\nwhich determines your range of valid values for the memory parameter:\n\n256 (.25 vCPU) - Available memory values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)\n512 (.5 vCPU) - Available memory values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)\n1024 (1 vCPU) - Available memory values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\n2048 (2 vCPU) - Available memory values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)\n4096 (4 vCPU) - Available memory values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)",
            "stability": "stable",
            "summary": "The number of cpu units used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-task-definition.ts",
            "line": 21
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "512",
            "remarks": "For tasks using the Fargate launch type,\nthis field is required and you must use one of the following values, which determines your range of valid values for the cpu parameter:\n\n512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available cpu values: 256 (.25 vCPU)\n1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available cpu values: 512 (.5 vCPU)\n2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available cpu values: 1024 (1 vCPU)\nBetween 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available cpu values: 2048 (2 vCPU)\nBetween 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available cpu values: 4096 (4 vCPU)",
            "stability": "stable",
            "summary": "The amount (in MiB) of memory used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-task-definition.ts",
            "line": 35
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.HealthCheck": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The health check command and associated configuration parameters for the container."
      },
      "fqn": "@aws-cdk/aws-ecs.HealthCheck",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 537
      },
      "name": "HealthCheck",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example: [ \"CMD-SHELL\", \"curl -f http://localhost/ || exit 1\" ]",
            "stability": "stable",
            "summary": "A string array representing the command that the container runs to determine if it is healthy. The string array must start with CMD to execute the command arguments directly, or CMD-SHELL to run the command with the container's default shell."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 545
          },
          "name": "command",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(30)",
            "remarks": "You may specify between 5 and 300 seconds.",
            "stability": "stable",
            "summary": "The time period in seconds between each health check execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 554
          },
          "name": "interval",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "You may specify between 1 and 10 retries.",
            "stability": "stable",
            "summary": "The number of times to retry a failed health check before the container is considered unhealthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 563
          },
          "name": "retries",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No start period",
            "remarks": "You may specify between 0 and 300 seconds.",
            "stability": "stable",
            "summary": "The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 573
          },
          "name": "startPeriod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(5)",
            "remarks": "You may specify between 2 and 60 seconds.",
            "stability": "stable",
            "summary": "The time period in seconds to wait for a health check to succeed before it is considered a failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 582
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Host": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The details on a container instance bind mount host volume."
      },
      "fqn": "@aws-cdk/aws-ecs.Host",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 456
      },
      "name": "Host",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This property is not supported for tasks that use the Fargate launch type.",
            "stability": "stable",
            "summary": "Specifies the path on the host container instance that is presented to the container. If the sourcePath value does not exist on the host container instance, the Docker daemon creates it. If the location does exist, the contents of the source path folder are exported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 464
          },
          "name": "sourcePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ICluster": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "A regional grouping of one or more container instances on which you can run tasks and services."
      },
      "fqn": "@aws-cdk/aws-ecs.ICluster",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 447
      },
      "name": "ICluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) that identifies the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 458
          },
          "name": "clusterArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 452
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Manage the allowed network connections for the cluster with Security Groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 468
          },
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies whether the cluster has EC2 instance capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 473
          },
          "name": "hasEc2Capacity",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC associated with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 463
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The autoscaling group added to the cluster if capacity is associated to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 483
          },
          "name": "autoscalingGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AWS Cloud Map namespace to associate with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 478
          },
          "name": "defaultCloudMapNamespace",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.IEc2Service": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface for a service using the EC2 launch type on an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.IEc2Service",
      "interfaces": [
        "@aws-cdk/aws-ecs.IService"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2/ec2-service.ts",
        "line": 86
      },
      "name": "IEc2Service"
    },
    "@aws-cdk/aws-ecs.IEc2TaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface of a task definition run on an EC2 cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.IEc2TaskDefinition",
      "interfaces": [
        "@aws-cdk/aws-ecs.ITaskDefinition"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2/ec2-task-definition.ts",
        "line": 31
      },
      "name": "IEc2TaskDefinition"
    },
    "@aws-cdk/aws-ecs.IFargateService": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface for a service using the Fargate launch type on an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.IFargateService",
      "interfaces": [
        "@aws-cdk/aws-ecs.IService"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/fargate-service.ts",
        "line": 64
      },
      "name": "IFargateService"
    },
    "@aws-cdk/aws-ecs.IFargateTaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface of a task definition run on a Fargate cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.IFargateTaskDefinition",
      "interfaces": [
        "@aws-cdk/aws-ecs.ITaskDefinition"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/fargate-task-definition.ts",
        "line": 41
      },
      "name": "IFargateTaskDefinition"
    },
    "@aws-cdk/aws-ecs.IService": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface for a service."
      },
      "fqn": "@aws-cdk/aws-ecs.IService",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 16
      },
      "name": "IService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 22
          },
          "name": "serviceArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ITaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface for all task definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.ITaskDefinition",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 10
      },
      "name": "ITaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "What launch types this task definition should be compatible with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 25
          },
          "name": "compatibility",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Compatibility"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return true if the task definition can be run on an EC2 cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 30
          },
          "name": "isEc2Compatible",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return true if the task definition can be run on a Fargate cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 35
          },
          "name": "isFargateCompatible",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ARN of this task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 15
          },
          "name": "taskDefinitionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Execution role for this task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 20
          },
          "name": "executionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ITaskDefinitionExtension": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "Classes that want to make changes to a TaskDefinition (such as\nadding helper containers) can implement this interface, and can\nthen be \"added\" to a TaskDefinition like so:\n\n    taskDefinition.addExtension(new MyExtension(\"some_parameter\"));",
        "stability": "stable",
        "summary": "An extension for Task Definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.ITaskDefinitionExtension",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 546
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Apply the extension to the given TaskDefinition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 552
          },
          "name": "extend",
          "parameters": [
            {
              "docs": {
                "summary": "[disable-awslint:ref-via-interface]."
              },
              "name": "taskDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
              }
            }
          ]
        }
      ],
      "name": "ITaskDefinitionExtension"
    },
    "@aws-cdk/aws-ecs.LaunchType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The launch type of an ECS service."
      },
      "fqn": "@aws-cdk/aws-ecs.LaunchType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 508
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The service will be launched using the EC2 launch type."
          },
          "name": "EC2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The service will be launched using the FARGATE launch type."
          },
          "name": "FARGATE"
        }
      ],
      "name": "LaunchType"
    },
    "@aws-cdk/aws-ecs.LinuxParameters": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Linux-specific options that are applied to the container."
      },
      "fqn": "@aws-cdk/aws-ecs.LinuxParameters",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the LinuxParameters class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LinuxParametersProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 26
      },
      "methods": [
        {
          "docs": {
            "remarks": "Only works with EC2 launch type.",
            "stability": "stable",
            "summary": "Adds one or more Linux capabilities to the Docker configuration of a container."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 72
          },
          "name": "addCapabilities",
          "parameters": [
            {
              "name": "cap",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Capability"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds one or more host devices to a container."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 88
          },
          "name": "addDevices",
          "parameters": [
            {
              "name": "device",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Device"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Only works with EC2 launch type.",
            "stability": "stable",
            "summary": "Specifies the container path, mount options, and size (in MiB) of the tmpfs mount for a container."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 97
          },
          "name": "addTmpfs",
          "parameters": [
            {
              "name": "tmpfs",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Tmpfs"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Only works with EC2 launch type.",
            "stability": "stable",
            "summary": "Removes one or more Linux capabilities to the Docker configuration of a container."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 81
          },
          "name": "dropCapabilities",
          "parameters": [
            {
              "name": "cap",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Capability"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the Linux parameters to a CloudFormation object."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 104
          },
          "name": "renderLinuxParameters",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LinuxParametersProperty"
            }
          }
        }
      ],
      "name": "LinuxParameters"
    },
    "@aws-cdk/aws-ecs.LinuxParametersProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for defining Linux-specific options that are applied to the container."
      },
      "fqn": "@aws-cdk/aws-ecs.LinuxParametersProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 7
      },
      "name": "LinuxParametersProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether to run an init process inside the container that forwards signals and reaps processes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 13
          },
          "name": "initProcessEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No shared memory.",
            "stability": "stable",
            "summary": "The value for the size (in MiB) of the /dev/shm volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 20
          },
          "name": "sharedMemorySize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.LogDriver": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The base class for log drivers."
      },
      "fqn": "@aws-cdk/aws-ecs.LogDriver",
      "initializer": {},
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/log-driver.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to CloudWatch Logs."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-driver.ts",
            "line": 12
          },
          "name": "awsLogs",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AwsLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-driver.ts",
            "line": 19
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "LogDriver"
    },
    "@aws-cdk/aws-ecs.LogDriverConfig": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The configuration to use when creating a log driver."
      },
      "fqn": "@aws-cdk/aws-ecs.LogDriverConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/log-driver.ts",
        "line": 25
      },
      "name": "LogDriverConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The valid values listed for this parameter are log drivers\nthat the Amazon ECS container agent can communicate with by default.\n\nFor tasks using the Fargate launch type, the supported log drivers are awslogs and splunk.\nFor tasks using the EC2 launch type, the supported log drivers are awslogs, syslog, gelf, fluentd, splunk, journald, and json-file.\n\nFor more information about using the awslogs log driver, see\n[Using the awslogs Log Driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html)\nin the Amazon Elastic Container Service Developer Guide.",
            "stability": "stable",
            "summary": "The log driver to use for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/log-driver.ts",
            "line": 37
          },
          "name": "logDriver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The configuration options to send to the log driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/log-driver.ts",
            "line": 42
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.MemoryUtilizationScalingProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for enabling scaling based on memory utilization."
      },
      "fqn": "@aws-cdk/aws-ecs.MemoryUtilizationScalingProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 114
      },
      "name": "MemoryUtilizationScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target value for memory utilization across all tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 118
          },
          "name": "targetUtilizationPercent",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.MountPoint": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The details of data volume mount points for a container."
      },
      "fqn": "@aws-cdk/aws-ecs.MountPoint",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 822
      },
      "name": "MountPoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path on the container to mount the host volume at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 826
          },
          "name": "containerPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this value is true, the container has read-only access to the volume.\nIf this value is false, then the container can write to the volume.",
            "stability": "stable",
            "summary": "Specifies whether to give the container read-only access to the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 833
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be a volume name referenced in the name parameter of task definition volume.",
            "stability": "stable",
            "summary": "The name of the volume to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 839
          },
          "name": "sourceVolume",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.NetworkMode": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The networking mode to use for the containers in the task."
      },
      "fqn": "@aws-cdk/aws-ecs.NetworkMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 390
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The task's containers do not have external connectivity and port mappings can't be specified in the container definition."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task utilizes Docker's built-in virtual network which runs inside each container instance."
          },
          "name": "BRIDGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task is allocated an elastic network interface."
          },
          "name": "AWS_VPC"
        },
        {
          "docs": {
            "remarks": "In this mode, you can't run multiple instantiations of the same task on a\nsingle container instance when port mappings are used.",
            "stability": "stable",
            "summary": "The task bypasses Docker's built-in virtual network and maps container ports directly to the EC2 instance's network interface directly."
          },
          "name": "HOST"
        }
      ],
      "name": "NetworkMode"
    },
    "@aws-cdk/aws-ecs.PlacementConstraint": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "Tasks will only be placed on instances that match these rules.",
        "stability": "stable",
        "summary": "The placement constraints to use for tasks in the service. For more information, see [Amazon ECS Task Placement Constraints](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html)."
      },
      "fqn": "@aws-cdk/aws-ecs.PlacementConstraint",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/placement.ts",
        "line": 101
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use distinctInstance to ensure that each task in a particular group is running on a different container instance."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 105
          },
          "name": "distinctInstances",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Multiple expressions can be specified. For more information, see\n[Cluster Query Language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html).\n\nYou can specify multiple expressions in one call. The tasks will only be placed on instances matching all expressions.",
            "see": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html",
            "stability": "stable",
            "summary": "Use memberOf to restrict the selection to a group of valid candidates specified by a query expression."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 119
          },
          "name": "memberOf",
          "parameters": [
            {
              "name": "expressions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the placement JSON."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 132
          },
          "name": "toJson",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "PlacementConstraint"
    },
    "@aws-cdk/aws-ecs.PlacementStrategy": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "Tasks will preferentially be placed on instances that match these rules.",
        "stability": "stable",
        "summary": "The placement strategies to use for tasks in the service. For more information, see [Amazon ECS Task Placement Strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html)."
      },
      "fqn": "@aws-cdk/aws-ecs.PlacementStrategy",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/placement.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Places tasks on the container instances with the least available capacity of the specified resource."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 70
          },
          "name": "packedBy",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.BinPackResource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This minimizes the number of instances in use.",
            "stability": "stable",
            "summary": "Places tasks on container instances with the least available amount of CPU capacity."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 54
          },
          "name": "packedByCpu",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This minimizes the number of instances in use.",
            "stability": "stable",
            "summary": "Places tasks on container instances with the least available amount of memory capacity."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 63
          },
          "name": "packedByMemory",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Places tasks randomly."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 77
          },
          "name": "randomly",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "attributes instanceId",
            "remarks": "You can use one of the built-in attributes found on `BuiltInAttributes`\nor supply your own custom instance attributes. If more than one attribute\nis supplied, spreading is done in order.",
            "stability": "stable",
            "summary": "Places tasks evenly based on the specified value."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 42
          },
          "name": "spreadAcross",
          "parameters": [
            {
              "name": "fields",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Places tasks evenly across all container instances in the cluster."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 29
          },
          "name": "spreadAcrossInstances",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the placement JSON."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 90
          },
          "name": "toJson",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "PlacementStrategy"
    },
    "@aws-cdk/aws-ecs.PortMapping": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Port mappings allow containers to access ports on the host container instance to send or receive traffic."
      },
      "fqn": "@aws-cdk/aws-ecs.PortMapping",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 739
      },
      "name": "PortMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If you are using containers in a task with the awsvpc or host network mode, exposed ports should be specified using containerPort.\nIf you are using containers in a task with the bridge network mode and you specify a container port and not a host port,\nyour container automatically receives a host port in the ephemeral port range.\n\nFor more information, see hostPort.\nPort mappings that are automatically assigned in this way do not count toward the 100 reserved ports limit of a container instance.",
            "stability": "stable",
            "summary": "The port number on the container that is bound to the user-specified or automatically assigned host port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 750
          },
          "name": "containerPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If you are using containers in a task with the awsvpc or host network mode,\nthe hostPort can either be left blank or set to the same value as the containerPort.\n\nIf you are using containers in a task with the bridge network mode,\nyou can specify a non-reserved host port for your container port mapping, or\nyou can omit the hostPort (or set it to 0) while specifying a containerPort and\nyour container automatically receives a port in the ephemeral port range for\nyour container instance operating system and Docker version.",
            "stability": "stable",
            "summary": "The port number on the container instance to reserve for your container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 764
          },
          "name": "hostPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TCP",
            "remarks": "Valid values are Protocol.TCP and Protocol.UDP.",
            "stability": "stable",
            "summary": "The protocol used for the port mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 771
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Protocol"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.PropagatedTagSource": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Propagate tags from either service or task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.PropagatedTagSource",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 523
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Propagate tags from service."
          },
          "name": "SERVICE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Propagate tags from task definition."
          },
          "name": "TASK_DEFINITION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Do not propagate."
          },
          "name": "NONE"
        }
      ],
      "name": "PropagatedTagSource"
    },
    "@aws-cdk/aws-ecs.Protocol": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Network protocol."
      },
      "fqn": "@aws-cdk/aws-ecs.Protocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 777
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "TCP."
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "UDP."
          },
          "name": "UDP"
        }
      ],
      "name": "Protocol"
    },
    "@aws-cdk/aws-ecs.RepositoryImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.ContainerImage",
      "docs": {
        "remarks": "For images hosted in Amazon ECR, see\n[EcrImage](https://docs.aws.amazon.com/AmazonECR/latest/userguide/images.html).",
        "stability": "stable",
        "summary": "An image hosted in a public or private repository."
      },
      "fqn": "@aws-cdk/aws-ecs.RepositoryImage",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the RepositoryImage class."
        },
        "parameters": [
          {
            "name": "imageName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.RepositoryImageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/images/repository.ts",
        "line": 21
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a ContainerDefinition."
          },
          "locationInModule": {
            "filename": "lib/images/repository.ts",
            "line": 30
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.ContainerImage",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig"
            }
          }
        }
      ],
      "name": "RepositoryImage"
    },
    "@aws-cdk/aws-ecs.RepositoryImageProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for an image hosted in a public or private repository."
      },
      "fqn": "@aws-cdk/aws-ecs.RepositoryImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/images/repository.ts",
        "line": 9
      },
      "name": "RepositoryImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The secret to expose to the container that contains the credentials for the image repository. The supported value is the full ARN of an AWS Secrets Manager secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/images/repository.ts",
            "line": 14
          },
          "name": "credentials",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.RequestCountScalingProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for enabling scaling based on Application Load Balancer (ALB) request counts."
      },
      "fqn": "@aws-cdk/aws-ecs.RequestCountScalingProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 124
      },
      "name": "RequestCountScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of ALB requests per target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 128
          },
          "name": "requestsPerTarget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ALB target group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 133
          },
          "name": "targetGroup",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ScalableTaskCount": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute",
      "docs": {
        "stability": "stable",
        "summary": "The scalable attribute representing task count."
      },
      "fqn": "@aws-cdk/aws-ecs.ScalableTaskCount",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the ScalableTaskCount class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ScalableTaskCountProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out to achieve a target CPU utilization."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 43
          },
          "name": "scaleOnCpuUtilization",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.CpuUtilizationScalingProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out to achieve a target memory utilization."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 57
          },
          "name": "scaleOnMemoryUtilization",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.MemoryUtilizationScalingProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out based on a specified metric value."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 36
          },
          "name": "scaleOnMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out to achieve a target Application Load Balancer request count per target."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 71
          },
          "name": "scaleOnRequestCount",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.RequestCountScalingProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out based on a specified scheduled time."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 29
          },
          "name": "scaleOnSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingSchedule"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out to achieve a target on a custom metric."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 89
          },
          "name": "scaleToTrackCustomMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TrackCustomMetricProps"
              }
            }
          ]
        }
      ],
      "name": "ScalableTaskCount"
    },
    "@aws-cdk/aws-ecs.ScalableTaskCountProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties of a scalable attribute representing task count."
      },
      "fqn": "@aws-cdk/aws-ecs.ScalableTaskCountProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 10
      },
      "name": "ScalableTaskCountProps"
    },
    "@aws-cdk/aws-ecs.Scope": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The scope for the Docker volume that determines its lifecycle. Docker volumes that are scoped to a task are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are scoped as shared persist after the task stops."
      },
      "fqn": "@aws-cdk/aws-ecs.Scope",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 505
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Docker volumes that are scoped to a task are automatically provisioned when the task starts and destroyed when the task stops."
          },
          "name": "TASK"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Docker volumes that are scoped as shared persist after the task stops."
          },
          "name": "SHARED"
        }
      ],
      "name": "Scope"
    },
    "@aws-cdk/aws-ecs.ScratchSpace": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The temporary disk space mounted to the container."
      },
      "fqn": "@aws-cdk/aws-ecs.ScratchSpace",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 800
      },
      "name": "ScratchSpace",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path on the container to mount the scratch volume at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 804
          },
          "name": "containerPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be a volume name referenced in the name parameter of task definition volume.",
            "stability": "stable",
            "summary": "The name of the scratch volume to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 816
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this value is true, the container has read-only access to the scratch volume.\nIf this value is false, then the container can write to the scratch volume.",
            "stability": "stable",
            "summary": "Specifies whether to give the container read-only access to the scratch volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 811
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 812
          },
          "name": "sourcePath",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Secret": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "A secret environment variable."
      },
      "fqn": "@aws-cdk/aws-ecs.Secret",
      "initializer": {},
      "kind": "class",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a environment variable value from a secret stored in AWS Secrets Manager."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 30
          },
          "name": "fromSecretsManager",
          "parameters": [
            {
              "name": "secret",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Secret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates an environment variable value from a parameter stored in AWS Systems Manager Parameter Store."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 19
          },
          "name": "fromSsmParameter",
          "parameters": [
            {
              "name": "parameter",
              "type": {
                "fqn": "@aws-cdk/aws-ssm.IParameter"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Secret"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 38
          },
          "name": "grantRead",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "Secret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 37
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.TaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "The base class for all task definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.TaskDefinition",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the TaskDefinition class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.TaskDefinitionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.ITaskDefinition"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 164
      },
      "methods": [
        {
          "docs": {
            "remarks": "The task will have a compatibility of EC2+Fargate.",
            "stability": "stable",
            "summary": "Imports a task definition from the specified task definition ARN."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 171
          },
          "name": "fromTaskDefinitionArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "taskDefinitionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ITaskDefinition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new container to the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 313
          },
          "name": "addContainer",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinitionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
            }
          }
        },
        {
          "docs": {
            "remarks": "Extension can be used to apply a packaged modification to\na task definition.",
            "stability": "stable",
            "summary": "Adds the specified extention to the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 351
          },
          "name": "addExtension",
          "parameters": [
            {
              "name": "extension",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ITaskDefinitionExtension"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds the specified placement constraint to the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 338
          },
          "name": "addPlacementConstraint",
          "parameters": [
            {
              "name": "constraint",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a policy statement to the task execution IAM role."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 306
          },
          "name": "addToExecutionRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a policy statement to the task IAM role."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 299
          },
          "name": "addToTaskRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a volume to the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 331
          },
          "name": "addVolume",
          "parameters": [
            {
              "name": "volume",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Volume"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates the task execution IAM role if it doesn't already exist."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 358
          },
          "name": "obtainExecutionRole",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.IRole"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Validates the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 370
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "TaskDefinition",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The task launch type compatiblity requirement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 215
          },
          "name": "compatibility",
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Compatibility"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The container definitions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 220
          },
          "name": "containers",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a family that this task definition is registered to. A family groups multiple versions of a task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 185
          },
          "name": "family",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return true if the task definition can be run on an EC2 cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 149
          },
          "name": "isEc2Compatible",
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return true if the task definition can be run on a Fargate cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 156
          },
          "name": "isFargateCompatible",
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The networking mode to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 201
          },
          "name": "networkMode",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.NetworkMode"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The full Amazon Resource Name (ARN) of the task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 191
          },
          "name": "taskDefinitionArn",
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the IAM role that grants containers in the task permission to call AWS APIs on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 196
          },
          "name": "taskRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Execution role for this task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 292
          },
          "name": "executionRole",
          "optional": true,
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "remarks": "Load balancers will send traffic to this container. The first\nessential container that is added to this task will become the default\ncontainer.",
            "stability": "stable",
            "summary": "Default container for this task."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 210
          },
          "name": "defaultContainer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.TaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for task definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.TaskDefinitionProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.CommonTaskDefinitionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 78
      },
      "name": "TaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The task launch type compatiblity requirement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 103
          },
          "name": "compatibility",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Compatibility"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CPU units are not specified.",
            "remarks": "If you are using the EC2 launch type, this field is optional and any value can be used.\nIf you are using the Fargate launch type, this field is required and you must use one of the following values,\nwhich determines your range of valid values for the memory parameter:\n\n256 (.25 vCPU) - Available memory values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)\n512 (.5 vCPU) - Available memory values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)\n1024 (1 vCPU) - Available memory values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\n2048 (2 vCPU) - Available memory values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)\n4096 (4 vCPU) - Available memory values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)",
            "stability": "stable",
            "summary": "The number of cpu units used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 120
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Memory used by task is not specified.",
            "remarks": "If using the EC2 launch type, this field is optional and any value can be used.\nIf using the Fargate launch type, this field is required and you must use one of the following values,\nwhich determines your range of valid values for the cpu parameter:\n\n512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available cpu values: 256 (.25 vCPU)\n1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available cpu values: 512 (.5 vCPU)\n2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available cpu values: 1024 (1 vCPU)\nBetween 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available cpu values: 2048 (2 vCPU)\nBetween 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available cpu values: 4096 (4 vCPU)",
            "stability": "stable",
            "summary": "The amount (in MiB) of memory used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 137
          },
          "name": "memoryMiB",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- NetworkMode.Bridge for EC2 tasks, AwsVpc for Fargate tasks.",
            "remarks": "On Fargate, the only supported networking mode is AwsVpc.",
            "stability": "stable",
            "summary": "The networking mode to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 86
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.NetworkMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No placement constraints.",
            "remarks": "You can specify a maximum of 10 constraints per task (this limit includes\nconstraints in the task definition and those specified at run time).\n\nNot supported in Fargate.",
            "stability": "stable",
            "summary": "The placement constraints to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 98
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Tmpfs": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The details of a tmpfs mount for a container."
      },
      "fqn": "@aws-cdk/aws-ecs.Tmpfs",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 154
      },
      "name": "Tmpfs",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The absolute file path where the tmpfs volume is to be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 158
          },
          "name": "containerPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The size (in MiB) of the tmpfs volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 163
          },
          "name": "size",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For more information, see\n[TmpfsMountOptions](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Tmpfs.html).",
            "stability": "stable",
            "summary": "The list of tmpfs volume mount options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 169
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.TmpfsMountOption"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.TmpfsMountOption": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The supported options for a tmpfs mount for a container."
      },
      "fqn": "@aws-cdk/aws-ecs.TmpfsMountOption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 247
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEFAULTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SUID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOSUID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NODEV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXEC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOEXEC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYNC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ASYNC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DIRSYNC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REMOUNT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOMAND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DIRATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NODIRATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BIND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RBIND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UNBINDABLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RUNBINDABLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRIVATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RPRIVATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SHARED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSHARED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SLAVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSLAVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RELATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NORELATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STRICTATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOSTRICTATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MODE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NR_INODES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NR_BLOCKS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MPOL"
        }
      ],
      "name": "TmpfsMountOption"
    },
    "@aws-cdk/aws-ecs.TrackCustomMetricProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for enabling target tracking scaling based on a custom CloudWatch metric."
      },
      "fqn": "@aws-cdk/aws-ecs.TrackCustomMetricProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 139
      },
      "name": "TrackCustomMetricProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The metric must represent utilization; that is, you will always get the following behavior:\n\n- metric > targetValue => scale out\n- metric < targetValue => scale in",
            "stability": "stable",
            "summary": "The custom CloudWatch metric to track."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 148
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target value for the custom CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 153
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Ulimit": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "NOTE: Does not work for Windows containers.",
        "stability": "stable",
        "summary": "The ulimit settings to pass to the container."
      },
      "fqn": "@aws-cdk/aws-ecs.Ulimit",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 636
      },
      "name": "Ulimit",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The hard limit for the ulimit type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 652
          },
          "name": "hardLimit",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For more information, see [UlimitName](https://docs.aws.amazon.com/cdk/api/latest/typescript/api/aws-ecs/ulimitname.html#aws_ecs_UlimitName).",
            "stability": "stable",
            "summary": "The type of the ulimit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 642
          },
          "name": "name",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.UlimitName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The soft limit for the ulimit type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 647
          },
          "name": "softLimit",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.UlimitName": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Type of resource to set a limit on."
      },
      "fqn": "@aws-cdk/aws-ecs.UlimitName",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 658
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CPU"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSIZE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOCKS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MEMLOCK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MSGQUEUE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOFILE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NPROC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RTPRIO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RTTIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SIGPENDING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STACK"
        }
      ],
      "name": "UlimitName"
    },
    "@aws-cdk/aws-ecs.Volume": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "For tasks that use a Docker volume, specify a DockerVolumeConfiguration.\nFor tasks that use a bind mount host volume, specify a host and optional sourcePath.\n\nFor more information, see [Using Data Volumes in Tasks](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html).",
        "stability": "stable",
        "summary": "A data volume used in a task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.Volume",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 423
      },
      "name": "Volume",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Up to 255 letters (uppercase and lowercase), numbers, and hyphens are allowed.\nThis name is referenced in the sourceVolume parameter of container definition mountPoints.",
            "stability": "stable",
            "summary": "The name of the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 441
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docker volumes are only supported when you are using the EC2 launch type.\nWindows containers only support the use of the local driver.\nTo use bind mounts, specify a host instead.",
            "stability": "stable",
            "summary": "This property is specified when you are using Docker volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 450
          },
          "name": "dockerVolumeConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.DockerVolumeConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Bind mount host volumes are supported when you are using either the EC2 or Fargate launch types.\nThe contents of the host parameter determine whether your bind mount host volume persists on the\nhost container instance and where it is stored. If the host parameter is empty, then the Docker\ndaemon assigns a host path for your data volume. However, the data is not guaranteed to persist\nafter the containers associated with it stop running.",
            "stability": "stable",
            "summary": "This property is specified when you are using bind mount host volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 433
          },
          "name": "host",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Host"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.VolumeFrom": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The details on a data volume from another container in the same task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.VolumeFrom",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 853
      },
      "name": "VolumeFrom",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If this value is true, the container has read-only access to the volume.\nIf this value is false, then the container can write to the volume.",
            "stability": "stable",
            "summary": "Specifies whether the container has read-only access to the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 865
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of another container within the same task definition from which to mount volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 857
          },
          "name": "sourceContainer",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.WindowsOptimizedVersion": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "ECS-optimized Windows version list."
      },
      "fqn": "@aws-cdk/aws-ecs.WindowsOptimizedVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 274
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVER_2019"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVER_2016"
        }
      ],
      "name": "WindowsOptimizedVersion"
    }
  },
  "version": "1.7.0",
  "fingerprint": "hJyTdsPRU7a9R8d3ofr23uc39CBAWsHtso7hO1/s3no="
}
